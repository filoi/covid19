{"version":3,"sources":["serviceWorker.js","constants/actions.js","constants/development.js","api/api.js","actions/index.js","styles/theme.js","components/Common/CustomSnackBar.jsx","constants/messageTypes.js","utils/helpers.js","reducers/messageReducer.js","store.js","utils/history.js","components/Attachments/Attachments.jsx","components/MessageConversation/Message.jsx","components/Attachments/AttachmentUploadButton.jsx","components/MessageConversation/ReplyCard.jsx","components/Common/SuggestionField.jsx","components/Common/ExtendedChoiceLabel.jsx","styles/messageConversationStyles.js","components/MessageConversation/MessageConversation.jsx","components/List/MessageTypeItem.jsx","components/List/SidebarList.jsx","styles/style.js","components/List/ListItemHeader.jsx","components/List/MessageConversationListItem.jsx","components/List/MessageConversationList.jsx","components/MessageConversation/CreateMessage.jsx","constants/extendedChoices.js","components/Common/AssignToDialog.jsx","components/Common/ToolbarExtendedChoicePicker.jsx","components/Common/Toolbar.jsx","components/MessagingCenter/MessagingCenter.jsx","components/App/Routes.jsx","components/App/AddD2Context.jsx","components/App/App.jsx","locales/index.js","utils/configI18n.js","index.js"],"names":["Boolean","window","location","hostname","match","LOAD_MESSAGE_CONVERSATIONS","MESSAGE_CONVERSATIONS_LOAD_SUCCESS","MESSAGE_CONVERSATIONS_DELETE_SUCCESS","MESSAGE_CONVERSATIONS_DELETE_ERROR","MESSAGE_CONVERSATION_UPDATE_SUCCESS","MESSAGE_CONVERSATION_UPDATE_ERROR","SEND_MESSAGE_ERROR","SET_FILTER","DISPLAY_SNACK_MESSAGE","CLEAR_SNACK_MESSAGE","SET_CHECKED","SET_ALL_CHECKED","CLEAR_CHECKED","SET_SELECTED_MESSAGE_TYPE","CLEAR_SELECTED_MESSAGE_CONVERSATION","SET_SELECTED_MESSAGE_CONVERSATION","SET_SELECTED_MESSAGE_CONVERSATION_SUCCESS","UPDATE_INPUT_FIELDS","SET_IN_FEEDBACK_RECIPIENT_GROUP","SET_DISPLAY_TIME_DIFF_SUCCESS","ADD_RECIPIENT_BY_ID_SUCCESS","ADD_ATTACHMENT","ADD_ATTACHMENT_SUCCESS","ADD_ATTACHMENT_ERROR","REMOVE_ATTACHMENT","CLEAR_ATTACHMENTS","CANCEL_ATTACHMENT","SET_DHIS2_CORE_VERSION","fontFamily","NEUTRAL","POSITIVE","NEGATIVE","getMessageConversations","_ref","messageType","page","messageFilter","status","priority","assignedToMeFilter","markedForFollowUpFilter","unreadFilter","filters","concat","push","getD2Instance","then","instance","currentUser","id","Api","getApi","get","undefined","fields","order","filter","result","messageConversations","pager","catch","error","getMessageConversation","messageConversation","updateMessageConversationStatus","messageConversationId","value","post","updateMessageConversationPriority","updateMessageConversationAssignee","delete","updateMessageConversationFollowup","messageConversationIds","getNrOfUnread","total","sendMessage","_ref2","subject","users","userGroups","organisationUnits","text","attachments","sendFeedbackMessage","headers","Content-Type","replyMessage","_ref3","message","internalReply","length","deleteMessageConversation","markRead","markedReadConversations","markUnread","markedUnreadConversations","searchRecipients","_ref5","searchValue","searchOnlyUsers","searchOnlyFeedbackRecipients","feedbackRecipientsId","pageSize","_ref6","searchUserGroups","_ref7","searchOrganisationUnits","_ref8","addRecipients","_ref9","getUserById","_ref10","displayName","type","addAttachment","attachment","form","FormData","append","createAttachment","downloadAttachment","messageId","attachmentId","baseUrl","url","filename","link","document","createElement","href","setAttribute","body","appendChild","click","downloadBlob","createAction","payload","setSelectedMessageConversation","Object","asyncToGenerator","regenerator_default","a","mark","_callee2","dispatch","wrap","_context2","prev","next","actions","api","sent","t0","stop","_x2","apply","this","arguments","loadMessageConversations","selectedMessageType","loadMore","_callee4","getState","promises","state","_state$messaging","i","promise","nrOfUnread","_context4","messaging","statusFilter","priorityFilter","Promise","all","reduce","accumulated","r","_x4","_x5","markMessageConversations","mode","markedConversations","_ref12","_callee9","_context9","_x13","_ref16","_callee12","_context12","response","fileResource","name","contentLength","_x16","clearCheckedIds","clearSelectedMessageConversation","displaySnackMessage","_ref18","onSnackActionClick","onSnackRequestClose","snackType","setFilter","filterType","updateInputFields","input","recipients","clearAttachments","setSelectedMessageType","messageTypeId","removeAttachment","cancelAttachment","attachmentName","getMuiTheme","palette","negative","pinkA200","blue50","primary1Color","primary2Color","blue100","primary3Color","blue300","primary4Color","blue500","accent1Color","grey50","accent2Color","grey100","accent3Color","grey300","accent4Color","grey500","followUp","orange500","darkGray","grey700","superDarkGray","grey900","textColor","darkBlack","alternateTextColor","white","canvasColor","borderColor","clockCircleColor","fade","shadowColor","fullBlack","contentColorStyle","theme","CustomSnackBar","props","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","closeMessage","clearSnackMessage","setState","show","_prevProps","prevState","_this2","react_default","Snackbar_default","open","autoHideDuration","onRequestClose","action","onActionClick","contentStyle","color","style","pointerEvents","whiteSpace","bodyStyle","maxWidth","Component","compose","connect","snackMessage","pure","messageTypes","unread","loaded","loading","findIndexOfId","list","len","index","debounce","fn","delay","timer","context","args","clearTimeout","setTimeout","supportsAttachments","dhis2CoreVersion","initialState","selectedMessageConversation","settingSelectedMessageConversation","checkedIds","isInFeedbackRecipientGroup","displayTimeDiff","messageReducer","stateMessageTypes","oldAttachments","objectSpread","replaceMessageType","find","splice","defineProperty","identifier","i18n","t","log","selectedValue","element","selectedMessageConversations","toConsumableArray","loadingMessageType","authorized","map","size","middlewares","ReduxThunk","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","reducer","combineReducers","createStore","applyMiddleware","createHashHistory","Attachment","dataDirection","FlatButton_default","className","backgroundColor","label","parseFloat","parseInt","toFixed","labelPosition","onClick","icon","CloudDownload_default","Clear_default","LinearProgress_default","Attachments","Attachments_Attachment","key","styles","canvas","padding","innerCanvas","margin","paddingBottom","cardText","wordBreak","fromFormat","datePlacement","display","justifyContent","marginRight","dateFormat","overflow","textOverflow","Message","lastMessage","enableAttachments","fromTitle","sender","today","moment","messageDate","created","add","internal","placement","diff","from","format","year","components_Attachments_Attachments","paddingLeft","CardText_default","Linkify_default","Divider_default","createHandleChange","event","files","target","AttachmentUploadButton","containerElement","AttachFile_default","onChange","ReplyCard","_this$props","wipeInput","inputError","texFieldUpdate","newValue","handleDiscard","discardState","expanded","Card","marginTop","TextField_default","rows","underlineShow","multiLine","fullWidth","floatingLabelText","RaisedButton_default","primary","disabled","components_Attachments_AttachmentUploadButton","_ref11","_callee8","_context8","_x11","_x12","searchDelay","SuggestionField","searchResult","lastSearch","errorText","debouncedSearch","search","bind","assertThisInitialized","onSuggestionClick","chip","recipient","updateRecipients","onRemoveChip","updateInput","addType","internalSearchResult","searchWarning","_this3","height","inputHeight","ChipInput_default","marginBottom","openOnFocus","searchText","dataSource","dataSourceConfig","onUpdateInput","onRequestAdd","onRequestDelete","subheaderTitle","paddingRight","subheader","fontWeight","ExtendedChoiceLabel","showTitle","title","displayLabel","charAt","toLowerCase","substr","flex","Subheader_default","overflowY","overflowX","paddingTop","flexDirection","header","iconButton","alignSelf","subjectSubheader","fontSize","participantsCanvas","participants","flexWrap","participantAddRow","participantsSuggestionField","participantsAdd","messagesCanvas","messagesInnerCanvas","NOTIFICATIONS","MessageConversation","backToList","history","_this$props2","cursor","messages","notification","indexOf","userMessages","slice","userMessage","recipientsExpanded","user","userMessagesLength","IconButton_default","tooltipPosition","tooltip","ArrowBack_default","displayExtendedChoices","Common_ExtendedChoiceLabel","assignee","participant","Chip_default","Common_SuggestionField","limitSearchArray","Add_default","Paper_default","MessageConversation_Message","MessageConversation_ReplyCard","assign","_ref13","_ref14","_callee10","_context10","_x14","_ref17","_callee13","_context13","_x17","MessageTypeItem","onMouseEnter","setHoverText","onMouseLeave","setNeutralText","setTextColor","getBackgroundColor","role","alignItems","marginLeft","CircularProgress_default","Badge_default","badgeContent","secondary","badgeStyle","borderLeftStyle","borderLeftWidth","borderLeftColor","borderRightStyle","borderRightWidth","borderRightColor","minWidth","SidebarList","params","List","List_MessageTypeItem","Toggle_default","width","refreshTimer","toggled","autoRefresh","onToggle","setAutoRefresh","messagePanelContainer","transition","boxSizing","position","boxShadow","borderBottom","checkBox","extendedLabel","MessageConversationListItem","allChecked","children","Checkbox_default","checked","onCheck","isInputChecked","setAllChecked","child","container","wideview","flag","fontColor","flexBasis","textAlign","read","lastSender","x","containerBackgroundColor","innerText","setChecked","Flag_default","MessageConversationList","onScroll","messageList","getElementById","isBottom","debouncedOnScroll","el","scrollHeight","scrollTop","outerHeight","Array","isArray","lookup","Set","item","has","dedupeById","ListItemHeader","List_MessageConversationListItem","messageTypeField","CreateMessage","subjectUpdate","inputUpdate","isMessageFeedback","generateUid","addRecipientByUserId","_this$props$match$par","recipientId","discardDisabled","RadioButton_default","_callee6","_getState","_getState$messaging","_context6","_x7","_x8","_callee7","_context7","_x9","_x10","_ref15","_callee11","_context11","console","_x15","extendedChoices","STATUS","primaryText","PRIORITY","AssignToDialog","updateMessageConversations","Dialog_default","nrSelected","ToolbarExtendedChoicePicker","getIds","updateMessageConversation","ids","toggleDialog","dialogOpen","checkedItems","assignToOpen","multiSelect","actionButtons","keyboardFocused","deleteMessageConversations","displayNumberOfCheckedIds","modal","Common_AssignToDialog","Delete_default","Markunread_default","Done_default","Assignment_default","IconMenu_default","iconButtonElement","more_vert_default","anchorOrigin","horizontal","vertical","targetOrigin","MenuItem_default","rightIcon","navigation_arrow_drop_right_default","menuItems","elem","material_ui_Subheader_default","_callee5","_context5","_x6","_ref4","_callee3","_context3","t1","_x3","checkedOptions","zIndex","checkedOption","filterControl","rightHandCanvas","ie11Spacer","flexGrow","iconMenu","Toolbar","lastMessageFilter","prevProps","displaySearch","Common_ToolbarExtendedChoicePicker","SelectField_default","labelStyle","top","selectedMenuItemStyle","floatingLabelStyle","iconStyle","hintText","menuStyle","Checkbox_Checkbox_default","ViewList_default","ViewHeadline_default","toogleWideview","EXTENDED_CHOICES","refreshTimerTotal","refreshTimerInterval","MessagingCenter","intervalId","clearInterval","setInterval","tick","refresh","selectedId","setDhis2CoreVersion","d2","system","version","minor","initialMessageConversation","configuration","symbol","userAuthorities","authorities","getOwnPropertySymbols","configurationResult","includes","group","feedbackRecipients","setIsInFeedbackRecipientGroup","setDisplayTimeDiff","Common_Toolbar","List_SidebarList","drawerOpen","List_MessageConversationList","MessageConversation_CreateMessage","components_MessageConversation_MessageConversation","disableLink","MailOutline_default","contextTypes","PropTypes","object","_callee","serverDate","_context","_x","Routes","react_router","exact","path","component","to","AddD2Context","getChildContext","render","MuiThemeProvider_default","muiTheme","React","childContextTypes","App","es","store","App_AddD2Context","HeaderBar","appName","Common_CustomSnackBar","App_Routes","namespace","locale","addResources","arTranslations","enTranslations","esTranslations","frTranslations","idTranslations","loTranslations","myTranslations","prsTranslations","psTranslations","ptTranslations","ruTranslations","ukTranslations","urTranslations","viTranslations","setDefaultNamespace","changeLanguage","configI18n","userSettings","uiLocale","keyUiLocale","config","sources","dhisConfig","systemVersion","providerApiVersion","process","schemas","init","getUserSettings","build_es","apiVersion","CssReset","components_App_App","initApp","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.da9cb6ff.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n        // [::1] is the IPv6 localhost address.\n        window.location.hostname === '[::1]' ||\n        // 127.0.0.1/8 is considered localhost for IPv4.\n        window.location.hostname.match(\n            /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n        )\n)\n\nexport function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config)\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    )\n                })\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config)\n            }\n        })\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing\n                if (installingWorker == null) {\n                    return\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            )\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration)\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.')\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration)\n                            }\n                        }\n                    }\n                }\n            }\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error)\n        })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type')\n            if (\n                response.status === 404 ||\n                (contentType != null &&\n                    contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload()\n                    })\n                })\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config)\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            )\n        })\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister()\n        })\n    }\n}\n","export const LOAD_MESSAGE_CONVERSATIONS = 'LOAD_MESSAGE_CONVERSATIONS'\nexport const LOAD_MORE_MESSAGE_CONVERSATIONS = 'LOAD_MORE_MESSAGE_CONVERSATIONS'\nexport const MESSAGE_CONVERSATIONS_LOAD_SUCCESS =\n    'MESSAGE_CONVERSATIONS_LOAD_SUCCESS'\nexport const MESSAGE_CONVERSATIONS_LOAD_ERROR =\n    'MESSAGE_CONVERSATIONS_LOAD_ERROR'\n\nexport const DELETE_MESSAGE_CONVERSATIONS = 'DELETE_MESSAGE_CONVERSATIONS'\nexport const MESSAGE_CONVERSATIONS_DELETE_SUCCESS =\n    'MESSAGE_CONVERSATIONS_DELETE_SUCCESS'\nexport const MESSAGE_CONVERSATIONS_DELETE_ERROR =\n    'MESSAGE_CONVERSATIONS_DELETE_ERROR'\n\nexport const UPDATE_MESSAGE_CONVERSATIONS = 'UPDATE_MESSAGE_CONVERSATIONS'\nexport const MESSAGE_CONVERSATION_UPDATE_SUCCESS =\n    'MESSAGE_CONVERSATION_UPDATE_SUCCESS'\nexport const MESSAGE_CONVERSATION_UPDATE_ERROR =\n    'MESSAGE_CONVERSATION_UPDATE_ERROR'\n\nexport const MARK_MESSAGE_CONVERSATIONS = 'MARK_MESSAGE_CONVERSATIONS'\nexport const MARK_MESSAGE_CONVERSATIONS_SUCCESS =\n    'MARK_MESSAGE_CONVERSATIONS_SUCCESS'\nexport const MARK_MESSAGE_CONVERSATIONS_ERROR =\n    'MARK_MESSAGE_CONVERSATIONS_ERROR'\n\nexport const SEND_MESSAGE = 'SEND_MESSAGE'\nexport const SEND_MESSAGE_SUCCESS = 'SEND_MESSAGE_SUCCESS'\nexport const SEND_MESSAGE_ERROR = 'SEND_MESSAGE_ERROR'\n\nexport const SEND_FEEDBACK_MESSAGE = 'SEND_FEEDBACK_MESSAGE'\n\nexport const REPLY_MESSAGE = 'REPLY_MESSAGE'\nexport const REPLY_MESSAGE_SUCCESS = 'REPLY_MESSAGE_SUCCESS'\nexport const REPLY_MESSAGE_ERROR = 'REPLY_MESSAGE_ERROR'\n\nexport const SET_FILTER = 'SET_FILTER'\nexport const DISPLAY_SNACK_MESSAGE = 'DISPLAY_SNACK_MESSAGE;'\nexport const CLEAR_SNACK_MESSAGE = 'CLEAR_SNACK_MESSAGE'\n\nexport const SET_CHECKED = 'SET_CHECKED'\nexport const SET_ALL_CHECKED = 'SET_ALL_CHECKED'\n\nexport const CLEAR_CHECKED = 'CLEAR_CHECKED'\nexport const SET_SELECTED_MESSAGE_TYPE = 'SET_SELECTED_MESSAGE_TYPE'\n\nexport const CLEAR_SELECTED_MESSAGE_CONVERSATION =\n    'CLEAR_SELECTED_MESSAGE_CONVERSATION'\nexport const SET_SELECTED_MESSAGE_CONVERSATION =\n    'SET_SELECTED_MESSAGE_CONVERSATION'\nexport const SET_SELECTED_MESSAGE_CONVERSATION_SUCCESS =\n    'SET_SELECTED_MESSAGE_CONVERSATION_SUCCESS'\nexport const SET_SELECTED_MESSAGE_CONVERSATION_ERROR =\n    'SET_SELECTED_MESSAGE_CONVERSATION_ERROR'\n\nexport const UPDATE_INPUT_FIELDS = 'UPDATE_INPUT_FIELDS'\n\nexport const SET_IN_FEEDBACK_RECIPIENT_GROUP = 'SET_IN_FEEDBACK_RECIPIENT_GROUP'\n\nexport const SET_DISPLAY_TIME_DIFF = 'SET_DISPLAY_TIME_DIFF'\nexport const SET_DISPLAY_TIME_DIFF_SUCCESS = 'SET_DISPLAY_TIME_DIFF_SUCCESS'\nexport const SET_DISPLAY_TIME_DIFF_ERROR = 'SET_DISPLAY_TIME_DIFF_ERROR'\n\n/* Recipient actions */\nexport const RECIPIENT_SEARCH = 'RECIPIENT_SEARCH'\nexport const RECIPIENT_SEARCH_SUCCESS = 'RECIPIENT_SEARCH_SUCCESS'\nexport const RECIPIENT_SEARCH_ERROR = 'RECIPIENT_SEARCH_ERROR'\n\nexport const ADD_RECIPIENTS = 'ADD_RECIPIENTS'\nexport const ADD_RECIPIENTS_SUCCESS = 'ADD_RECIPIENTS_SUCCESS'\nexport const ADD_RECIPIENTS_ERROR = 'ADD_RECIPIENTS_ERROR'\nexport const ADD_RECIPIENT_BY_ID_SUCCESS = 'ADD_RECIPIENT_BY_ID_SUCCESS'\n\n/* Attachments */\nexport const ADD_ATTACHMENT = 'ADD_ATTACHMENT'\nexport const ADD_ATTACHMENT_SUCCESS = 'ADD_ATTACHMENT_SUCCESS'\nexport const ADD_ATTACHMENT_ERROR = 'ADD_ATTACHMENT_ERROR'\n\nexport const DOWNLOAD_ATTACHMENT = 'DOWNLOAD_ATTACHMENT'\nexport const DOWNLOAD_ATTACHMENT_SUCCESS = 'DOWNLOAD_ATTACHMENT_SUCCESS'\nexport const DOWNLOAD_ATTACHMENT_ERROR = 'DOWNLOAD_ATTACHMENT_ERROR'\n\nexport const REMOVE_ATTACHMENT = 'REMOVE_ATTACHMENT'\n\nexport const CLEAR_ATTACHMENTS = 'CLEAR_ATTACHMENTS'\nexport const CANCEL_ATTACHMENT = 'CANCEL_ATTACHMENT'\n\n/* DHIS2 CORE VERSION */\nexport const SET_DHIS2_CORE_VERSION = 'SET_DHIS2_CORE_VERSION'\n","export const pageSize = 35\nexport const fontFamily = 'Roboto, Helvetica, Arial, sans-serif'\n\nexport const NEUTRAL = 'NEUTRAL'\nexport const POSITIVE = 'POSITIVE'\nexport const NEGATIVE = 'NEGATIVE'\n","import { getInstance as getD2Instance } from 'd2/lib/d2'\nimport { pageSize } from '../constants/development'\n\nconst initialMessageConversationFields =\n    'id, displayName, subject, messageType, lastSender[id, displayName], assignee[id, displayName], status, priority, lastUpdated, read, lastMessage, followUp'\n\nconst messageConversationFields =\n    '*,assignee[id, displayName],messages[*,sender[id,displayName],attachments[id, name, contentLength]],userMessages[user[id, displayName]]'\n\nconst order = 'lastMessage:desc'\n\nexport const getMessageConversations = ({\n    messageType,\n    page,\n    messageFilter,\n    status,\n    priority,\n    assignedToMeFilter,\n    markedForFollowUpFilter,\n    unreadFilter,\n}) => {\n    const filters = [`messageType:eq:${messageType}`]\n    typeof status !== 'undefined' && filters.push(`status:eq:${status}`)\n    typeof priority !== 'undefined' && filters.push(`priority:eq:${priority}`)\n    markedForFollowUpFilter && filters.push('followUp:eq:true')\n    unreadFilter && filters.push('read:eq:false')\n\n    return getD2Instance()\n        .then(instance => {\n            assignedToMeFilter &&\n                filters.push(`assignee.id:eq:${instance.currentUser.id}`)\n\n            return instance.Api.getApi().get(\n                `messageConversations?pageSize=${pageSize}&page=${page}${\n                    messageFilter !== '' && messageFilter !== undefined\n                        ? `&queryString=${messageFilter}`\n                        : ''\n                }`,\n                {\n                    fields: [initialMessageConversationFields],\n                    order,\n                    filter: filters,\n                }\n            )\n        })\n        .then(result => ({\n            messageConversations: result.messageConversations,\n            pager: result.pager,\n        }))\n        .catch(error => {\n            throw error\n        })\n}\n\nexport const getMessageConversation = messageConversation =>\n    getD2Instance()\n        .then(instance =>\n            instance.Api.getApi().get(\n                `messageConversations/${messageConversation.id}`,\n                {\n                    fields: [messageConversationFields],\n                }\n            )\n        )\n        .then(result => result)\n        .catch(error => {\n            throw error\n        })\n\nexport const getServerDate = () =>\n    getD2Instance()\n        .then(instance => instance.Api.getApi().get('system/info'))\n        .then(result => result.serverDate)\n        .catch(error => {\n            throw error\n        })\n\nexport const updateMessageConversationStatus = (messageConversationId, value) =>\n    getD2Instance()\n        .then(instance =>\n            instance.Api.getApi().post(\n                `messageConversations/${messageConversationId}/status?messageConversationStatus=${value}`\n            )\n        )\n        .then(result => result)\n        .catch(error => {\n            throw error\n        })\n\nexport const updateMessageConversationPriority = (\n    messageConversationId,\n    value\n) =>\n    getD2Instance()\n        .then(instance =>\n            instance.Api.getApi().post(\n                `messageConversations/${messageConversationId}/priority?messageConversationPriority=${value}`\n            )\n        )\n        .then(result => result)\n        .catch(error => {\n            throw error\n        })\n\nexport const updateMessageConversationAssignee = (\n    messageConversationId,\n    value\n) =>\n    getD2Instance()\n        .then(instance =>\n            value === undefined\n                ? instance.Api.getApi().delete(\n                      `messageConversations/${messageConversationId}/assign`\n                  )\n                : instance.Api.getApi().post(\n                      `messageConversations/${messageConversationId}/assign?userId=${value}`\n                  )\n        )\n        .then(result => result)\n        .catch(error => {\n            throw error\n        })\n\nexport const updateMessageConversationFollowup = (\n    messageConversationIds,\n    value\n) =>\n    getD2Instance()\n        .then(instance =>\n            instance.Api.getApi().post(\n                `messageConversations/${value ? 'followup' : 'unfollowup'}`,\n                messageConversationIds\n            )\n        )\n        .then(result => result)\n        .catch(error => {\n            throw error\n        })\n\nexport const getNrOfUnread = messageType =>\n    getD2Instance()\n        .then(instance =>\n            instance.Api.getApi().get('messageConversations', {\n                fields: 'read',\n                filter: ['read:eq:false', `messageType:eq:${messageType}`],\n            })\n        )\n        .then(result => result.pager.total)\n        .catch(error => {\n            throw error\n        })\n\nexport const sendMessage = ({\n    subject,\n    users,\n    userGroups,\n    organisationUnits,\n    text,\n    attachments,\n    id,\n}) =>\n    getD2Instance()\n        .then(instance =>\n            instance.Api.getApi().post('messageConversations', {\n                id,\n                subject,\n                users,\n                userGroups,\n                organisationUnits,\n                attachments,\n                text,\n            })\n        )\n        .then(() => ({ messageConversationId: id }))\n        .catch(error => {\n            throw error\n        })\n\nexport const sendFeedbackMessage = (subject, text) =>\n    getD2Instance()\n        .then(instance =>\n            instance.Api.getApi().post(\n                `messageConversations/feedback?subject=${subject}`,\n                text,\n                {\n                    headers: { 'Content-Type': 'text/plain' },\n                }\n            )\n        )\n        .then(result => result)\n        .catch(error => {\n            throw error\n        })\n\nexport const replyMessage = ({ message, internalReply, attachments, id }) =>\n    getD2Instance()\n        .then(instance =>\n            instance.Api.getApi().post(\n                `messageConversations/${id}?internal=${internalReply}${\n                    attachments.length > 0 ? `&attachments=${attachments}` : ''\n                }`,\n                message,\n                {\n                    headers: { 'Content-Type': 'text/plain' },\n                }\n            )\n        )\n        .catch(error => {\n            throw error\n        })\n\nexport const deleteMessageConversation = messageConversationId =>\n    getD2Instance()\n        .then(instance =>\n            instance.Api.getApi().delete(\n                `messageConversations/${messageConversationId}/${\n                    instance.currentUser.id\n                }`\n            )\n        )\n        .then(result => result)\n        .catch(error => {\n            throw error\n        })\n\nexport const markRead = markedReadConversations =>\n    getD2Instance()\n        .then(instance =>\n            instance.Api.getApi().post(\n                'messageConversations/read',\n                markedReadConversations\n            )\n        )\n        .then(result => result)\n        .catch(error => {\n            throw error\n        })\n\nexport const markUnread = markedUnreadConversations =>\n    getD2Instance()\n        .then(instance =>\n            instance.Api.getApi().post(\n                'messageConversations/unread',\n                markedUnreadConversations\n            )\n        )\n        .then(result => result)\n        .catch(error => {\n            throw error\n        })\n\n/* Feedback recipient query */\nexport const isInFeedbackRecipientGroup = () =>\n    getD2Instance()\n        .then(instance =>\n            instance.Api.getApi().get('me', { fields: 'userGroups[id]' })\n        )\n        .then(result =>\n            getD2Instance()\n                .then(instance => ({\n                    configuration: instance.Api.getApi()\n                        .get('configuration')\n                        .then(configuration => configuration),\n                    instance,\n                }))\n                .then(({ configuration, instance }) => {\n                    const getSymbolProperties = symbol =>\n                        Array.from(\n                            symbol[Object.getOwnPropertySymbols(symbol)[0]]\n                        )\n\n                    const userAuthorities = getSymbolProperties(\n                        instance.currentUser.authorities\n                    )\n                    return configuration.then(configurationResult => ({\n                        authorized:\n                            userAuthorities.includes('ALL') ||\n                            !!result.userGroups.find(\n                                group =>\n                                    group.id ===\n                                    configurationResult.feedbackRecipients.id\n                            ),\n                        feedbackRecipientsId:\n                            configurationResult.feedbackRecipients.id,\n                    }))\n                })\n                .catch(error => {\n                    throw error\n                })\n        )\n        .catch(error => {\n            throw error\n        })\n\n/* Recipient search */\nconst MAX_RECIPIENT = 10\nconst searchOrganisationUnits = searchValue =>\n    getD2Instance()\n        .then(instance =>\n            instance.Api.getApi().get('organisationUnits', {\n                fields: 'id, displayName',\n                pageSize: MAX_RECIPIENT,\n                filter: [`displayName:token:${searchValue}`, 'users:gte:1'],\n            })\n        )\n        .then(result => result)\n        .catch(error => {\n            throw error\n        })\n\nconst searchUserGroups = searchValue =>\n    getD2Instance()\n        .then(instance =>\n            instance.Api.getApi().get('userGroups', {\n                fields: 'id, displayName',\n                pageSize: MAX_RECIPIENT,\n                filter: [`displayName:token:${searchValue}`],\n            })\n        )\n        .then(result => result)\n        .catch(error => {\n            throw error\n        })\n\nexport const searchRecipients = ({\n    searchValue,\n    searchOnlyUsers,\n    searchOnlyFeedbackRecipients,\n    feedbackRecipientsId,\n}) => {\n    const filters = [`displayName:token:${searchValue}`]\n    searchOnlyFeedbackRecipients &&\n        filters.push(`userGroups.id:eq:${feedbackRecipientsId}`)\n\n    return getD2Instance()\n        .then(instance =>\n            instance.Api.getApi().get('users', {\n                pageSize: MAX_RECIPIENT,\n                filter: filters,\n            })\n        )\n        .then(({ users }) =>\n            searchOnlyUsers\n                ? { users, undefined }\n                : searchUserGroups(searchValue).then(({ userGroups }) =>\n                      searchOrganisationUnits(searchValue).then(\n                          ({ organisationUnits }) => ({\n                              users,\n                              userGroups,\n                              organisationUnits,\n                          })\n                      )\n                  )\n        )\n        .catch(error => {\n            throw error\n        })\n}\n\nexport const fetchParticipants = messageConversationId =>\n    getD2Instance()\n        .then(instance =>\n            instance.Api.getApi().get(\n                `messageConversations/${messageConversationId}`,\n                {\n                    fields: 'userMessages[user[id, displayName]]',\n                }\n            )\n        )\n        .then(result => result)\n        .catch(error => {\n            throw error\n        })\n\nexport const addRecipients = ({\n    users,\n    userGroups,\n    organisationUnits,\n    messageConversationId,\n}) =>\n    getD2Instance()\n        .then(instance =>\n            instance.Api.getApi().post(\n                `messageConversations/${messageConversationId}/recipients`,\n                {\n                    users,\n                    userGroups,\n                    organisationUnits,\n                }\n            )\n        )\n        .catch(error => {\n            throw error\n        })\n\nexport const getUserById = id =>\n    getD2Instance()\n        .then(instance =>\n            instance.Api.getApi().get(`users/${id}`, {\n                fields: 'id,displayName',\n            })\n        )\n        .then(({ id, displayName }) => ({\n            id,\n            displayName,\n            type: 'user',\n        }))\n        .catch(error => {\n            throw error\n        })\n\nexport function createAttachment(attachment) {\n    const form = new FormData()\n    form.append('file', attachment)\n    return form\n}\n\nexport const addAttachment = attachment =>\n    getD2Instance()\n        .then(instance =>\n            instance.Api.getApi().post(\n                '/fileResources?domain=MESSAGE_ATTACHMENT',\n                createAttachment(attachment)\n            )\n        )\n        .catch(error => {\n            throw error\n        })\n\nexport function downloadBlob(url, filename) {\n    const link = document.createElement('a')\n    link.href = url\n    link.setAttribute('target', '_blank')\n    document.body.appendChild(link)\n    link.click()\n}\n\nexport const downloadAttachment = (\n    messageConversationId,\n    messageId,\n    attachmentId\n) =>\n    getD2Instance()\n        .then(instance => {\n            const baseUrl = instance.Api.getApi().baseUrl\n            return downloadBlob(\n                `${baseUrl}/messageConversations/${messageConversationId}/${messageId}/attachments/${attachmentId}`\n            )\n        })\n        .catch(error => {\n            throw error\n        })\n","import * as actions from '../constants/actions'\nimport log from 'loglevel'\nimport * as api from '../api/api'\nimport moment from 'moment'\n\n// Simple hack to solve negative time difference\nconst FUTURE_HACK = 5000\nconst createAction = (type, payload) => ({ type, payload })\n\n/******************\n * THUNKS SECTION *\n ******************/\n\nexport const setDisplayTimeDiff = () => async dispatch => {\n    try {\n        const serverDate = await api.getServerDate()\n        const displayTimeDiff = moment().diff(moment(serverDate)) - FUTURE_HACK\n\n        dispatch(\n            createAction(actions.SET_DISPLAY_TIME_DIFF_SUCCESS, displayTimeDiff)\n        )\n    } catch (error) {\n        dispatch(createAction(actions.SET_DISPLAY_TIME_DIFF_ERROR, { error }))\n    }\n}\n\nexport const setSelectedMessageConversation = messageConversation => async dispatch => {\n    dispatch(createAction(actions.SET_SELECTED_MESSAGE_CONVERSATION))\n\n    try {\n        const result = await api.getMessageConversation(messageConversation)\n\n        dispatch(\n            createAction(actions.SET_SELECTED_MESSAGE_CONVERSATION_SUCCESS, {\n                messageConversation: result,\n            })\n        )\n    } catch (error) {\n        dispatch(\n            createAction(actions.SET_SELECTED_MESSAGE_CONVERSATION_ERROR, {\n                error,\n            })\n        )\n    }\n}\n\nexport const updateMessageConversations = ({\n    messageConversationIds,\n    identifier,\n    value,\n    messageType,\n    selectedMessageConversation,\n}) => async dispatch => {\n    if (identifier === 'FOLLOW_UP') {\n        try {\n            await api.updateMessageConversationFollowup(\n                messageConversationIds,\n                value\n            )\n            dispatch(\n                createAction(actions.MESSAGE_CONVERSATION_UPDATE_SUCCESS, {\n                    messageType: messageType,\n                    page: 1,\n                    identifier: identifier,\n                })\n            )\n            dispatch(loadMessageConversations())\n        } catch (error) {\n            dispatch(\n                createAction(actions.MESSAGE_CONVERSATION_UPDATE_ERROR, {\n                    error,\n                })\n            )\n        }\n    } else {\n        const promises = messageConversationIds.map(messageConversationId => {\n            let promise\n            switch (identifier) {\n                case 'STATUS':\n                    promise = api.updateMessageConversationStatus(\n                        messageConversationId,\n                        value\n                    )\n                    break\n                case 'PRIORITY':\n                    promise = api.updateMessageConversationPriority(\n                        messageConversationId,\n                        value\n                    )\n                    break\n                case 'ASSIGNEE':\n                    if (\n                        value !== undefined &&\n                        messageType.id === 'VALIDATION_RESULT'\n                    ) {\n                        promise = api\n                            .addRecipients({\n                                users: value.map(value => ({\n                                    id: value,\n                                })),\n                                userGroups: [],\n                                organisationUnits: [],\n                                messageConversationId,\n                            })\n                            .then(() =>\n                                api.updateMessageConversationAssignee(\n                                    messageConversationId,\n                                    value\n                                )\n                            )\n                    } else {\n                        promise = api.updateMessageConversationAssignee(\n                            messageConversationId,\n                            value\n                        )\n                    }\n\n                    break\n                default:\n                    log.error(\n                        'Unexpected identifier for updateMessageConversations'\n                    )\n                    break\n            }\n            return promise\n        })\n\n        try {\n            await Promise.all(promises)\n            dispatch(\n                createAction(actions.MESSAGE_CONVERSATION_UPDATE_SUCCESS, {\n                    messageType: messageType,\n                    page: 1,\n                    identifier: identifier,\n                })\n            )\n            dispatch(loadMessageConversations())\n        } catch (error) {\n            dispatch(\n                createAction(actions.MESSAGE_CONVERSATION_UPDATE_ERROR, {\n                    error,\n                })\n            )\n        }\n    }\n\n    if (selectedMessageConversation) {\n        dispatch(setSelectedMessageConversation(selectedMessageConversation))\n    }\n}\n\nexport const loadMessageConversations = (\n    messageType,\n    selectedMessageType,\n    loadMore = false\n) => async (dispatch, getState) => {\n    const promises = []\n    const state = getState()\n    const {\n        messageFilter,\n        statusFilter: status,\n        priorityFilter: priority,\n        assignedToMeFilter,\n        markedForFollowUpFilter,\n        unreadFilter,\n    } = state.messaging\n\n    // Default fallback values so this action can be called without arguments\n    messageType = messageType || state.messaging.selectedMessageType\n    selectedMessageType =\n        selectedMessageType || state.messaging.selectedMessageType.id\n\n    dispatch(\n        createAction(actions.LOAD_MESSAGE_CONVERSATIONS, {\n            messageType,\n            loadMore,\n        })\n    )\n\n    try {\n        for (let i = 1; i <= messageType.page; i++) {\n            const promise = api\n                .getMessageConversations({\n                    messageType: messageType.id,\n                    page: i,\n                    messageFilter,\n                    status,\n                    priority,\n                    assignedToMeFilter,\n                    markedForFollowUpFilter,\n                    unreadFilter,\n                })\n                .then(result => ({\n                    messageConversations: result.messageConversations,\n                    pager: result.pager,\n                }))\n\n            promises.push(promise)\n        }\n\n        const result = await Promise.all(promises)\n        const nrOfUnread = await api.getNrOfUnread(messageType.id)\n        const messageConversations = result.reduce(\n            (accumulated, r) => accumulated.concat(r.messageConversations),\n            []\n        )\n\n        dispatch(\n            createAction(actions.MESSAGE_CONVERSATIONS_LOAD_SUCCESS, {\n                messageConversations,\n                pager: result[result.length - 1].pager,\n                messageType,\n                selectedMessageType,\n                nrOfUnread,\n            })\n        )\n    } catch (error) {\n        dispatch(\n            createAction(actions.MESSAGE_CONVERSATIONS_LOAD_ERROR, { error })\n        )\n    }\n}\n\nexport const deleteMessageConversations = (\n    messageConversationIds,\n    messageType\n) => async dispatch => {\n    try {\n        const promises = messageConversationIds.map(messageConversationId =>\n            api.deleteMessageConversation(messageConversationId)\n        )\n\n        await Promise.all(promises)\n\n        dispatch(\n            createAction(actions.MESSAGE_CONVERSATIONS_DELETE_SUCCESS, {\n                messageType: messageType,\n                page: 1,\n            })\n        )\n\n        dispatch(loadMessageConversations())\n    } catch (error) {\n        dispatch(\n            createAction(actions.MESSAGE_CONVERSATIONS_DELETE_ERROR, { error })\n        )\n    }\n}\n\nexport const sendMessage = ({\n    users,\n    userGroups,\n    organisationUnits,\n    messageConversationId,\n    messageType,\n}) => async (dispatch, getState) => {\n    try {\n        const {\n            messaging: { subject, input, attachments },\n        } = getState()\n\n        await api.sendMessage({\n            subject,\n            users,\n            userGroups,\n            organisationUnits,\n            text: input,\n            attachments,\n            id: messageConversationId,\n        })\n\n        dispatch(\n            createAction(actions.SEND_MESSAGE_SUCCESS, { messageType, page: 1 })\n        )\n        dispatch(loadMessageConversations())\n    } catch (error) {\n        dispatch(createAction(actions.SEND_MESSAGE_ERROR, { error }))\n    }\n}\n\nexport const sendFeedbackMessage = messageType => async (\n    dispatch,\n    getState\n) => {\n    const state = getState()\n    try {\n        await api.sendFeedbackMessage(\n            state.messaging.subject,\n            state.messaging.input\n        )\n\n        dispatch(\n            createAction(actions.SEND_MESSAGE_SUCCESS, {\n                messageType: messageType,\n                page: 1,\n            })\n        )\n\n        dispatch(loadMessageConversations())\n    } catch (error) {\n        dispatch(createAction(actions.SEND_MESSAGE_ERROR, { error }))\n    }\n}\n\nexport const replyMessage = ({\n    message,\n    internalReply,\n    messageConversation,\n    messageType,\n}) => async (dispatch, getState) => {\n    try {\n        const { id } = messageConversation\n        const state = getState()\n        const attachments = state.messaging.attachments.map(\n            attachment => attachment.id\n        )\n\n        await api.replyMessage({\n            message,\n            internalReply,\n            attachments,\n            id,\n        })\n\n        dispatch(\n            createAction(actions.REPLY_MESSAGE_SUCCESS, {\n                messageConversation: messageConversation,\n                messageType: messageType,\n                page: 1,\n            })\n        )\n\n        dispatch(loadMessageConversations())\n        dispatch(setSelectedMessageConversation(messageConversation))\n    } catch (error) {\n        dispatch(createAction(actions.REPLY_MESSAGE_ERROR, { error }))\n    }\n}\n\nexport const markMessageConversations = (\n    mode,\n    markedConversations,\n    messageType\n) => async dispatch => {\n    try {\n        await (mode === 'read'\n            ? api.markRead(markedConversations)\n            : api.markUnread(markedConversations))\n\n        dispatch(\n            createAction(actions.MARK_MESSAGE_CONVERSATIONS_SUCCESS, {\n                messageType: messageType,\n                page: 1,\n            })\n        )\n\n        dispatch(loadMessageConversations())\n    } catch (error) {\n        dispatch(\n            createAction(actions.MARK_MESSAGE_CONVERSATIONS_ERROR, { error })\n        )\n    }\n}\n\nexport const addRecipients = ({\n    users,\n    userGroups,\n    organisationUnits,\n    messageConversation,\n    messageType,\n}) => async dispatch => {\n    try {\n        const { id: messageConversationId } = messageConversation\n\n        await api.addRecipients({\n            users,\n            userGroups,\n            organisationUnits,\n            messageConversationId,\n        })\n\n        dispatch(\n            createAction(actions.ADD_RECIPIENTS_SUCCESS, {\n                messageConversation: messageConversation,\n                messageType: messageType,\n                page: 1,\n            })\n        )\n\n        dispatch(setSelectedMessageConversation(messageConversation))\n    } catch (error) {\n        dispatch(createAction(actions.ADD_RECIPIENTS_ERROR, { error }))\n    }\n}\n\nexport const addRecipientByUserId = id => async dispatch => {\n    try {\n        const user = await api.getUserById(id)\n\n        dispatch(createAction(actions.ADD_RECIPIENT_BY_ID_SUCCESS, user))\n    } catch (error) {\n        console.error(error)\n        // No action required, the field will just be empty\n    }\n}\n\nexport const addAttachment = attachment => async dispatch => {\n    dispatch(createAction(actions.ADD_ATTACHMENT, attachment))\n\n    try {\n        const result = await api.addAttachment(attachment)\n\n        dispatch(\n            createAction(actions.ADD_ATTACHMENT_SUCCESS, {\n                id: result.response.fileResource.id,\n                name: attachment.name,\n                contentLength: result.response.fileResource.contentLength,\n            })\n        )\n    } catch (error) {\n        dispatch(createAction(actions.ADD_ATTACHMENT_ERROR, { error }))\n    }\n}\n\nexport const downloadAttachment = (\n    messageConversationId,\n    messageId,\n    attachmentId\n) => async dispatch => {\n    try {\n        await api.downloadAttachment(\n            messageConversationId,\n            messageId,\n            attachmentId\n        )\n\n        dispatch(createAction(actions.DOWNLOAD_ATTACHMENT_SUCCESS))\n    } catch (error) {\n        dispatch(createAction(actions.DOWNLOAD_ATTACHMENT_ERROR, { error }))\n    }\n}\n\n/************************\n * PLAIN ACTION SECTION *\n ************************/\n\nexport const clearSnackMessage = () => createAction(actions.CLEAR_SNACK_MESSAGE)\n\nexport const clearCheckedIds = () => createAction(actions.CLEAR_CHECKED)\n\nexport const clearSelectedMessageConversation = () =>\n    createAction(actions.CLEAR_SELECTED_MESSAGE_CONVERSATION)\n\nexport const displaySnackMessage = ({\n    message,\n    onSnackActionClick,\n    onSnackRequestClose,\n    snackType,\n}) =>\n    createAction(actions.DISPLAY_SNACK_MESSAGE, {\n        message,\n        onSnackActionClick,\n        onSnackRequestClose,\n        snackType,\n    })\n\nexport const setAllChecked = messageConversationIds =>\n    createAction(actions.SET_ALL_CHECKED, { messageConversationIds })\n\nexport const setChecked = (messageConversation, selectedValue) =>\n    createAction(actions.SET_CHECKED, { messageConversation, selectedValue })\n\nexport const setFilter = (filter, filterType) =>\n    createAction(actions.SET_FILTER, { filter, filterType })\n\nexport const updateInputFields = (subject, input, recipients) =>\n    createAction(actions.UPDATE_INPUT_FIELDS, { subject, input, recipients })\n\nexport const clearAttachments = () => createAction(actions.CLEAR_ATTACHMENTS)\n\nexport const setSelectedMessageType = messageTypeId =>\n    createAction(actions.SET_SELECTED_MESSAGE_TYPE, { messageTypeId })\n\nexport const removeAttachment = attachmentId =>\n    createAction(actions.REMOVE_ATTACHMENT, { attachmentId })\n\nexport const cancelAttachment = attachmentName =>\n    createAction(actions.CANCEL_ATTACHMENT, { attachmentName })\n\nexport const setIsInFeedbackRecipientGroup = isInFeedbackRecipientGroup =>\n    createAction(actions.SET_IN_FEEDBACK_RECIPIENT_GROUP, {\n        isInFeedbackRecipientGroup,\n    })\n\nexport const setDhis2CoreVersion = version =>\n    createAction(actions.SET_DHIS2_CORE_VERSION, version)\n","import getMuiTheme from 'material-ui/styles/getMuiTheme'\nimport { fade } from 'material-ui/utils/colorManipulator'\nimport {\n    blue50,\n    blue100,\n    blue300,\n    blue500,\n    pinkA200,\n    grey50,\n    grey100,\n    grey300,\n    grey500,\n    grey700,\n    grey900,\n    orange500,\n    white,\n    darkBlack,\n    fullBlack,\n} from 'material-ui/styles/colors'\n\nexport default getMuiTheme({\n    palette: {\n        negative: pinkA200,\n        blue50,\n        primary1Color: '#1D8BF1',\n        primary2Color: blue100,\n        primary3Color: blue300,\n        primary4Color: blue500,\n        accent1Color: grey50,\n        accent2Color: grey100,\n        accent3Color: grey300,\n        accent4Color: grey500,\n        followUp: orange500,\n        darkGray: grey700,\n        superDarkGray: grey900,\n        textColor: darkBlack,\n        alternateTextColor: white,\n        canvasColor: white,\n        borderColor: grey300,\n        clockCircleColor: fade(darkBlack, 0.07),\n        shadowColor: fullBlack,\n    },\n})\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport Snackbar from 'material-ui/Snackbar'\nimport { clearSnackMessage } from '../../actions'\nimport { compose, pure } from 'recompose'\nimport theme from '../../styles/theme'\n\nconst DEFAULT_MESSAGE_DURATION = 4000\nconst contentColorStyle = {\n    NEGATIVE: theme.palette.negative,\n    NEUTRAL: theme.palette.primary1Color,\n    POSITIVE: theme.palette.alternateTextColor,\n}\n\nclass CustomSnackBar extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            show: false,\n        }\n    }\n\n    componentDidUpdate(_prevProps, prevState) {\n        if (!prevState.show && this.props.message) {\n            this.setState({\n                show: true,\n            })\n        }\n    }\n\n    closeMessage = () => {\n        this.props.clearSnackMessage()\n        this.setState({\n            show: false,\n        })\n        this.props.onSnackRequestClose && this.props.onSnackRequestClose()\n    }\n\n    render() {\n        return (\n            <Snackbar\n                open={this.props.message !== '' && this.state.show}\n                message={this.props.message || 'Missing snackbar message'}\n                autoHideDuration={DEFAULT_MESSAGE_DURATION}\n                onRequestClose={this.closeMessage}\n                action={this.props.onSnackActionClick && 'undo'}\n                onActionClick={() => {\n                    this.props.onSnackActionClick()\n                    this.setState({\n                        show: false,\n                    })\n                }}\n                contentStyle={{ color: contentColorStyle[this.props.type] }}\n                style={{ pointerEvents: 'none', whiteSpace: 'nowrap' }}\n                bodyStyle={{ pointerEvents: 'initial', maxWidth: 'none' }}\n            />\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    message: state.messaging.snackMessage,\n    type: state.messaging.snackType,\n    onSnackActionClick: state.messaging.onSnackActionClick,\n    onSnackRequestClose: state.messaging.onSnackRequestClose,\n})\n\nexport default compose(\n    connect(\n        mapStateToProps,\n        {\n            clearSnackMessage,\n        }\n    ),\n    pure\n)(CustomSnackBar)\n","const messageTypes = [\n    {\n        id: 'PRIVATE',\n        displayName: 'Inbox',\n        unread: 0,\n        loaded: 0,\n        loading: false,\n        total: 0,\n        page: 1,\n    },\n    {\n        id: 'VALIDATION_RESULT',\n        displayName: 'Validation',\n        unread: 0,\n        loaded: 0,\n        loading: false,\n        total: 0,\n        page: 1,\n    },\n    {\n        id: 'TICKET',\n        displayName: 'Ticket',\n        unread: 0,\n        loaded: 0,\n        loading: false,\n        total: 0,\n        page: 1,\n    },\n    {\n        id: 'SYSTEM',\n        displayName: 'System',\n        unread: 0,\n        loaded: 0,\n        loading: false,\n        total: 0,\n        page: 1,\n    },\n]\n\nexport default messageTypes\n","export function dedupeById(list) {\n    if (!Array.isArray(list)) {\n        return undefined\n    }\n    const lookup = new Set()\n    return list.filter(item => {\n        if (lookup.has(item.id)) {\n            return false\n        }\n\n        lookup.add(item.id)\n        return true\n    })\n}\n\nexport function findIndexOfId(list, id) {\n    const len = list.length\n    for (let index = 0; index < len; index++) {\n        if (list[index].id === id) {\n            return index\n        }\n    }\n    return undefined\n}\n\nexport function debounce(fn, delay) {\n    let timer = null\n    return function() {\n        const context = this\n        const args = arguments\n        clearTimeout(timer)\n        timer = setTimeout(function() {\n            fn.apply(context, args)\n        }, delay)\n    }\n}\n\nexport function supportsAttachments(dhis2CoreVersion) {\n    return dhis2CoreVersion > 30\n}\n\nexport function supportsUnversionedApiCalls(dhis2CoreVersion) {\n    return dhis2CoreVersion > 31\n}\n","import i18n from '@dhis2/d2-i18n'\nimport log from 'loglevel'\nimport * as actions from '../constants/actions'\nimport messageTypes from '../constants/messageTypes'\nimport { POSITIVE, NEGATIVE, NEUTRAL } from '../constants/development'\nimport { findIndexOfId } from '../utils/helpers'\n\nexport const initialState = {\n    // Message conversation\n    messageConversations: {},\n    messageTypes,\n    selectedMessageType: undefined,\n    selectedMessageConversation: undefined,\n    settingSelectedMessageConversation: false,\n    checkedIds: [],\n    messageFilter: undefined,\n    statusFilter: undefined,\n    priorityFilter: undefined,\n    assignedToMeFilter: false,\n    markedForFollowUpFilter: false,\n    unreadFilter: false,\n    isInFeedbackRecipientGroup: false,\n    feedbackRecipientsId: undefined,\n    displayTimeDiff: 0,\n\n    // Input for create and reply\n    subject: '',\n    input: '',\n    recipients: [],\n\n    // Attachments\n    attachments: [],\n\n    // Snackbar\n    snackMessage: '',\n    onSnackActionClick: undefined,\n    onSnackRequestClose: undefined,\n    snackType: NEUTRAL,\n}\n\nfunction messageReducer(state = initialState, action) {\n    const stateMessageTypes = state.messageTypes\n    const oldAttachments = state.attachments\n\n    switch (action.type) {\n        case actions.SET_DISPLAY_TIME_DIFF_SUCCESS:\n            return {\n                ...state,\n                displayTimeDiff: action.payload,\n            }\n\n        case actions.MESSAGE_CONVERSATIONS_LOAD_SUCCESS: {\n            const replaceMessageType = stateMessageTypes.find(\n                type => type.id === action.payload.messageType.id\n            )\n            replaceMessageType.loaded =\n                action.payload.messageConversations.length\n            replaceMessageType.total = action.payload.pager.total\n            replaceMessageType.unread = action.payload.nrOfUnread\n            replaceMessageType.page = action.payload.pager.page\n            replaceMessageType.loading = false\n            messageTypes.splice(\n                [findIndexOfId(stateMessageTypes, replaceMessageType.id)],\n                1,\n                replaceMessageType\n            )\n\n            const setSelectedMessageType =\n                action.payload.selectedMessageType === replaceMessageType.id &&\n                (action.payload.selectedMessageType ===\n                    state.selectedMessageType ||\n                    state.selectedMessageType === undefined)\n\n            return {\n                ...state,\n                messageTypes,\n                messageConversations: {\n                    ...state.messageConversations,\n                    [replaceMessageType.id]:\n                        action.payload.messageConversations,\n                },\n                selectedMessageType: setSelectedMessageType\n                    ? replaceMessageType\n                    : state.selectedMessageType,\n            }\n        }\n\n        case actions.MESSAGE_CONVERSATION_UPDATE_ERROR:\n            return {\n                ...state,\n                snackMessage: action.payload.error.message,\n                snackType: NEGATIVE,\n            }\n\n        case actions.MESSAGE_CONVERSATION_UPDATE_SUCCESS: {\n            let snackMessage = ''\n            switch (action.payload.identifier) {\n                case 'STATUS':\n                    snackMessage = i18n.t('Successfully updated status')\n                    break\n                case 'PRIORITY':\n                    snackMessage = i18n.t('Successfully updated priority')\n                    break\n                case 'ASSIGNEE':\n                    snackMessage = i18n.t('Successfully updated assignee')\n                    break\n                case 'FOLLOW_UP':\n                    snackMessage = i18n.t('Successfully changed followup')\n                    break\n                default:\n                    log.error(\n                        'Unexpected identifier for updateMessageConversations success'\n                    )\n                    break\n            }\n\n            return {\n                ...state,\n                snackMessage,\n                snackType: POSITIVE,\n            }\n        }\n\n        case actions.SEND_MESSAGE_ERROR:\n            return {\n                ...state,\n                snackMessage: action.payload.error.message,\n                snackType: NEGATIVE,\n            }\n\n        case actions.MESSAGE_CONVERSATIONS_DELETE_ERROR:\n            return {\n                ...state,\n                snackMessage: action.payload.error.message,\n                snackType: NEGATIVE,\n            }\n\n        case actions.MESSAGE_CONVERSATIONS_DELETE_SUCCESS:\n            return {\n                ...state,\n                snackMessage: i18n.t(\n                    'Successfully deleted message conversation(s)'\n                ),\n                snackType: POSITIVE,\n            }\n\n        case actions.DISPLAY_SNACK_MESSAGE:\n            return {\n                ...state,\n                snackMessage: action.payload.message,\n                snackType: action.payload.snackType,\n                onSnackActionClick: action.payload.onSnackActionClick,\n                onSnackRequestClose: action.payload.onSnackRequestClose,\n            }\n\n        case actions.CLEAR_SNACK_MESSAGE:\n            return {\n                ...state,\n                snackMessage: '',\n                snackType: NEUTRAL,\n            }\n\n        case actions.SET_CHECKED: {\n            const messageConversation = action.payload.messageConversation\n\n            let checkedIds = state.checkedIds\n            if (action.payload.selectedValue) {\n                checkedIds.push(messageConversation)\n            } else {\n                checkedIds = checkedIds.filter(\n                    element => element.id !== messageConversation.id\n                )\n            }\n\n            return {\n                ...state,\n                checkedIds,\n            }\n        }\n\n        case actions.SET_ALL_CHECKED:\n            return {\n                ...state,\n                checkedIds: action.payload.messageConversationIds,\n            }\n\n        case actions.CLEAR_CHECKED:\n            return {\n                ...state,\n                checkedIds: [],\n            }\n\n        case actions.SET_SELECTED_MESSAGE_CONVERSATION_SUCCESS:\n            return {\n                ...state,\n                selectedMessageConversation: action.payload.messageConversation,\n                settingSelectedMessageConversation: false,\n            }\n\n        case actions.SET_SELECTED_MESSAGE_CONVERSATION:\n            return {\n                ...state,\n                settingSelectedMessageConversation: true,\n            }\n\n        case actions.CLEAR_SELECTED_MESSAGE_CONVERSATION:\n            return {\n                ...state,\n                selectedMessageConversation: undefined,\n            }\n\n        case actions.SET_SELECTED_MESSAGE_TYPE:\n            return {\n                ...state,\n                checkedIds: [],\n                selectedMessageType: stateMessageTypes.find(\n                    type => type.id === action.payload.messageTypeId\n                ),\n                selectedMessageConversations:\n                    state.messageConversations[action.payload.messageTypeId],\n                selectedMessageConversation: undefined,\n            }\n\n        case actions.UPDATE_INPUT_FIELDS:\n            return {\n                ...state,\n                subject: action.payload.subject,\n                input: action.payload.input,\n                recipients: action.payload.recipients,\n            }\n\n        case actions.ADD_RECIPIENT_BY_ID_SUCCESS:\n            return {\n                ...state,\n                recipients: [...state.recipients, action.payload],\n            }\n\n        case actions.SET_FILTER:\n            return {\n                ...state,\n                messageFilter:\n                    action.payload.filterType === 'MESSAGE'\n                        ? action.payload.filter\n                        : state.messageFilter,\n                statusFilter:\n                    action.payload.filterType === 'STATUS'\n                        ? action.payload.filter\n                        : state.statusFilter,\n                priorityFilter:\n                    action.payload.filterType === 'PRIORITY'\n                        ? action.payload.filter\n                        : state.priorityFilter,\n                assignedToMeFilter:\n                    action.payload.filterType === 'ASSIGNED_TO_ME'\n                        ? action.payload.filter\n                        : state.assignedToMeFilter,\n                markedForFollowUpFilter:\n                    action.payload.filterType === 'MARKED_FOR_FOLLOWUP'\n                        ? action.payload.filter\n                        : state.markedForFollowUpFilter,\n                unreadFilter:\n                    action.payload.filterType === 'UNREAD'\n                        ? action.payload.filter\n                        : state.unreadFilter,\n            }\n\n        case actions.LOAD_MESSAGE_CONVERSATIONS: {\n            const loadingMessageType = action.payload.messageType\n            loadingMessageType.loading = true\n\n            if (action.payload.loadMore) {\n                loadingMessageType.page++\n            }\n\n            messageTypes[\n                findIndexOfId(messageTypes, loadingMessageType.id)\n            ] = loadingMessageType\n\n            // TODO: This can probably be removed because action.payload.messageType === state.selectedMessageType\n            const selectedMessageType = state.selectedMessageType\n            if (selectedMessageType) {\n                selectedMessageType.loading = true\n                if (action.payload.loadMore) {\n                    selectedMessageType.page++\n                }\n            }\n\n            return {\n                ...state,\n                messageTypes,\n                selectedMessageType,\n            }\n        }\n\n        case actions.SET_IN_FEEDBACK_RECIPIENT_GROUP:\n            return {\n                ...state,\n                isInFeedbackRecipientGroup:\n                    action.payload.isInFeedbackRecipientGroup.authorized,\n                feedbackRecipientsId:\n                    action.payload.isInFeedbackRecipientGroup\n                        .feedbackRecipientsId,\n            }\n\n        case actions.ADD_ATTACHMENT_SUCCESS:\n            return {\n                ...state,\n                attachments: state.attachments.map(attachment =>\n                    attachment.name === action.payload.name\n                        ? {\n                              id: action.payload.id,\n                              name: attachment.name,\n                              contentLength: attachment.contentLength,\n                              loading: false,\n                          }\n                        : attachment\n                ),\n            }\n\n        case actions.ADD_ATTACHMENT_ERROR:\n            return {\n                ...state,\n                attachments: oldAttachments.filter(\n                    attachment => attachment.id !== action.payload.attachmentId\n                ),\n                snackMessage: action.payload.error.message,\n                snackType: NEGATIVE,\n            }\n\n        case actions.ADD_ATTACHMENT:\n            return {\n                ...state,\n                attachments: state.attachments.concat({\n                    name: action.payload.name,\n                    contentLength: action.payload.size,\n                    loading: true,\n                }),\n            }\n\n        case actions.REMOVE_ATTACHMENT:\n            return {\n                ...state,\n                attachments: oldAttachments.filter(\n                    attachment => attachment.id !== action.payload.attachmentId\n                ),\n            }\n\n        case actions.CANCEL_ATTACHMENT:\n            return {\n                ...state,\n                attachments: oldAttachments.filter(\n                    attachment =>\n                        attachment.name !== action.payload.attachmentName\n                ),\n            }\n\n        case actions.CLEAR_ATTACHMENTS:\n            return {\n                ...state,\n                attachments: [],\n            }\n\n        case actions.SET_DHIS2_CORE_VERSION:\n            return {\n                ...state,\n                dhis2CoreVersion: action.payload,\n            }\n\n        default:\n            return state\n    }\n}\n\nexport default messageReducer\n","import { createStore, applyMiddleware, combineReducers, compose } from 'redux'\nimport ReduxThunk from 'redux-thunk'\nimport { createLogger } from 'redux-logger'\nimport messageReducer from './reducers/messageReducer'\n\nconst middlewares = [ReduxThunk]\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\n\nif (process.env.NODE_ENV === 'development') {\n    middlewares.push(createLogger())\n}\n\nconst reducer = combineReducers({\n    messaging: messageReducer,\n})\n\nexport default createStore(\n    reducer,\n    composeEnhancers(applyMiddleware(...middlewares))\n)\n","import { createHashHistory } from 'history'\n\nexport default createHashHistory()\n","import React from 'react'\nimport FlatButton from 'material-ui/FlatButton'\nimport LinearProgress from 'material-ui/LinearProgress'\nimport Clear from 'material-ui-icons/Clear'\nimport Download from 'material-ui-icons/CloudDownload'\nimport theme from '../../styles/theme'\nimport './Attachments.css'\n\nconst Attachments = ({\n    dataDirection,\n    attachments,\n    style,\n    removeAttachment,\n    downloadAttachment,\n    cancelAttachment,\n}) => (\n    <div className=\"attachment\" style={{ ...style }}>\n        {attachments.map((attachment, index) => (\n            <Attachment\n                // combining name with index prevents errors when user uploads files with duplicate names\n                key={`${attachment.name}-${index}`}\n                dataDirection={dataDirection}\n                attachment={attachment}\n                removeAttachment={removeAttachment}\n                downloadAttachment={downloadAttachment}\n                cancelAttachment={cancelAttachment}\n            />\n        ))}\n    </div>\n)\n\nconst Attachment = ({\n    dataDirection,\n    attachment,\n    removeAttachment,\n    downloadAttachment,\n    cancelAttachment,\n}) => {\n    return (\n        <FlatButton\n            className=\"attachment__button\"\n            backgroundColor={theme.palette.accent2Color}\n            label={`${attachment.name} (${parseFloat(\n                parseInt(attachment.contentLength, 10) / 1000000\n            ).toFixed(2)} MB)`}\n            labelPosition=\"after\"\n            onClick={() => {\n                dataDirection === 'download'\n                    ? downloadAttachment(attachment)\n                    : attachment.loading\n                    ? cancelAttachment(attachment.name)\n                    : removeAttachment(attachment)\n            }}\n            icon={dataDirection === 'download' ? <Download /> : <Clear />}\n        >\n            {attachment.loading && (\n                <LinearProgress\n                    className={'attachment__progress'}\n                    mode=\"indeterminate\"\n                />\n            )}\n        </FlatButton>\n    )\n}\n\nexport default Attachments\n","import React from 'react'\nimport Divider from 'material-ui/Divider'\nimport CardText from 'material-ui/Card/CardText'\nimport Attachments from '../Attachments/Attachments'\nimport i18n from '@dhis2/d2-i18n'\nimport Linkify from 'react-linkify'\nimport theme from '../../styles/theme'\nimport { fontFamily } from '../../constants/development'\nimport moment from 'moment'\n\nconst styles = {\n    canvas(backgroundColor) {\n        return {\n            backgroundColor,\n            padding: '16px 16px 16px 16px',\n        }\n    },\n    innerCanvas: {\n        margin: '',\n        paddingBottom: '0px',\n    },\n    cardText: {\n        padding: '16px 0px 16px 0px',\n        fontFamily,\n        whiteSpace: 'pre-wrap',\n        wordBreak: 'break-word',\n    },\n    fromFormat: {\n        fontFamily,\n    },\n    datePlacement: {\n        display: 'flex',\n        justifyContent: 'flex-end',\n        marginRight: '10px',\n    },\n    dateFormat: {\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        whiteSpace: 'nowrap',\n        fontFamily,\n    },\n}\n\nconst Message = ({\n    displayTimeDiff,\n    message,\n    currentUser,\n    lastMessage,\n    downloadAttachment,\n    cancelAttachment,\n    enableAttachments,\n}) => {\n    const fromTitle = message.sender\n        ? currentUser && currentUser.id === message.sender.id\n            ? 'me'\n            : message.sender.displayName\n        : 'system'\n    const today = moment()\n    const messageDate = moment(message.created).add(displayTimeDiff)\n\n    return (\n        <div style={styles.canvas(theme.palette.canvasColor)}>\n            <div style={styles.innerCanvas}>\n                <div style={styles.fromFormat}>\n                    {message.internal\n                        ? i18n.t(`Internal message from ${fromTitle}`)\n                        : i18n.t(`Message from ${fromTitle}`)}\n                </div>\n\n                <div placement={'bottom'} style={styles.datePlacement}>\n                    <div style={styles.dateFormat}>\n                        {today.diff(messageDate, 'hours') < 72\n                            ? `${messageDate.from(today)}, ${messageDate.format(\n                                  'HH:mm'\n                              )}`\n                            : today.year() === messageDate.year()\n                            ? messageDate.format('MMM DD, HH:mm')\n                            : messageDate.format('MMM DD, YYYY HH:mm')}\n                    </div>\n                </div>\n\n                {enableAttachments && (\n                    <Attachments\n                        dataDirection={'download'}\n                        style={{ paddingLeft: 0 }}\n                        attachments={message.attachments}\n                        downloadAttachment={downloadAttachment}\n                        cancelAttachment={cancelAttachment}\n                    />\n                )}\n\n                <CardText style={styles.cardText}>\n                    <Linkify>{message.text}</Linkify>\n                </CardText>\n            </div>\n            {!lastMessage && <Divider />}\n        </div>\n    )\n}\n\nexport default Message\n","import React from 'react'\nimport FlatButton from 'material-ui/FlatButton'\nimport AttachFile from 'material-ui-icons/AttachFile'\nimport i18n from '@dhis2/d2-i18n'\nimport './AttachmentUploadButton.css'\n\nconst createHandleChange = addAttachment => event => {\n    const files = event.target.files\n    const hasFile = files.length > 0\n\n    if (hasFile) {\n        addAttachment(files[0])\n    }\n}\n\nconst AttachmentUploadButton = ({ addAttachment }) => (\n    <FlatButton\n        className=\"attachment__upload-button\"\n        label={i18n.t('Upload attachment')}\n        labelPosition=\"after\"\n        containerElement=\"label\"\n        icon={<AttachFile />}\n    >\n        <input\n            className=\"attachment__upload-button--input\"\n            type=\"file\"\n            onChange={createHandleChange(addAttachment)}\n        />\n    </FlatButton>\n)\n\nexport default AttachmentUploadButton\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { compose } from 'recompose'\nimport { Card, CardActions, CardText } from 'material-ui/Card'\nimport RaisedButton from 'material-ui/RaisedButton'\nimport FlatButton from 'material-ui/FlatButton'\nimport TextField from 'material-ui/TextField'\nimport AttachmentUploadButton from '../Attachments/AttachmentUploadButton'\nimport Attachments from '../Attachments/Attachments'\nimport { supportsAttachments } from '../../utils/helpers'\nimport i18n from '@dhis2/d2-i18n'\nimport {\n    replyMessage,\n    setSelectedMessageType,\n    updateInputFields,\n    displaySnackMessage,\n    addAttachment,\n    removeAttachment,\n    cancelAttachment,\n} from '../../actions'\nimport { NEGATIVE } from '../../constants/development'\n\nclass ReplyCard extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            discardState: false,\n        }\n    }\n\n    componentWillUnmount() {\n        this.wipeInput()\n    }\n\n    replyMessage = internalReply => {\n        const {\n            input: message,\n            selectedMessageConversation: messageConversation,\n            selectedMessageType: messageType,\n        } = this.props\n\n        this.props.replyMessage({\n            message,\n            internalReply,\n            messageConversation,\n            messageType,\n        })\n\n        this.wipeInput()\n    }\n\n    wipeInput = () => {\n        this.props.updateInputFields('', '', [])\n        this.props.attachments.length > 0 && this.props.clearAttachments()\n        this.setState({\n            inputError: false,\n        })\n    }\n\n    texFieldUpdate = (event, newValue) => {\n        this.props.updateInputFields('', newValue, [])\n    }\n\n    handleDiscard = () => {\n        const message = i18n.t('Reply discarded')\n        const snackType = NEGATIVE\n        const onSnackActionClick = () => this.setState({ discardState: false })\n        const onSnackRequestClose = () => {\n            this.setState({ discardState: false })\n            this.wipeInput()\n        }\n\n        this.setState({ discardState: true })\n        this.props.displaySnackMessage({\n            message,\n            onSnackActionClick,\n            onSnackRequestClose,\n            snackType,\n        })\n        this.setState({\n            expanded: false,\n        })\n    }\n\n    render() {\n        return (\n            <Card style={{ marginTop: '5px' }} expanded>\n                <CardText style={{ padding: '0px 0px 0px 16px' }}>\n                    <TextField\n                        key={this.props.messageConversation.id}\n                        id={this.props.messageConversation.id}\n                        rows={5}\n                        underlineShow={false}\n                        value={this.state.discardState ? '' : this.props.input}\n                        multiLine\n                        fullWidth\n                        floatingLabelText={i18n.t('Message')}\n                        onChange={this.texFieldUpdate}\n                    />\n                    {this.props.enableAttachments &&\n                        !this.state.discardState && (\n                            <Attachments\n                                dataDirection={'upload'}\n                                attachments={this.props.attachments}\n                                removeAttachment={attachment =>\n                                    this.props.removeAttachment(attachment.id)\n                                }\n                                cancelAttachment={this.props.cancelAttachment}\n                            />\n                        )}\n\n                    <CardActions style={{ paddingLeft: '0px' }}>\n                        <RaisedButton\n                            primary\n                            label={i18n.t('Reply')}\n                            disabled={\n                                this.props.input === '' ||\n                                this.state.discardState\n                            }\n                            onClick={() => this.replyMessage(false)}\n                        />\n                        {this.props.isInFeedbackRecipientGroup &&\n                            this.props.selectedMessageType.id === 'TICKET' && (\n                                <FlatButton\n                                    primary\n                                    label={i18n.t('Internal reply')}\n                                    disabled={\n                                        this.props.input === '' ||\n                                        this.state.discardState\n                                    }\n                                    onClick={() => this.replyMessage(true)}\n                                />\n                            )}\n                        <FlatButton\n                            label={i18n.t('Discard')}\n                            disabled={\n                                this.props.input === '' ||\n                                this.state.discardState\n                            }\n                            onClick={this.handleDiscard}\n                        />\n                        {this.props.enableAttachments && (\n                            <AttachmentUploadButton\n                                addAttachment={attachment => {\n                                    this.props.addAttachment(attachment)\n                                }}\n                            />\n                        )}\n                        )\n                    </CardActions>\n                </CardText>\n            </Card>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    selectedMessageConversation: state.messaging.selectedMessageConversation,\n    selectedMessageType: state.messaging.selectedMessageType,\n    messageTypes: state.messaging.messageTypes,\n    input: state.messaging.input,\n    isInFeedbackRecipientGroup: state.messaging.isInFeedbackRecipientGroup,\n    attachments: state.messaging.attachments,\n    enableAttachments: supportsAttachments(state.messaging.dhis2CoreVersion),\n})\n\nexport default compose(\n    connect(\n        mapStateToProps,\n        {\n            replyMessage,\n            setSelectedMessageType,\n            updateInputFields,\n            displaySnackMessage,\n            addAttachment,\n            removeAttachment,\n            cancelAttachment,\n        },\n        null,\n        { pure: false }\n    )\n)(ReplyCard)\n","import React, { Component } from 'react'\nimport ChipInput from 'material-ui-chip-input'\nimport { debounce } from '../../utils/helpers'\nimport i18n from '@dhis2/d2-i18n'\nimport * as api from '../../api/api'\n\nconst searchDelay = 300\nconst minCharLength = 2\n\n/*\n * An AutoComplete text field with suggestions from a given list of\n * identifiable objects. Selected objects are shown as chips in the text field.\n */\n\nclass SuggestionField extends Component {\n    state = {\n        input: '',\n        searchResult: [],\n        searchOnlyUsers: this.props.searchOnlyUsers,\n        searchOnlyFeedbackRecipients: this.props.searchOnlyFeedbackRecipients,\n        lastSearch: '',\n        errorText: undefined,\n    }\n\n    debouncedSearch = debounce(this.search.bind(this), searchDelay)\n\n    search(input) {\n        const doSearch =\n            !this.state.searchResult.find(\n                result => result.displayName === input\n            ) &&\n            input !== '' &&\n            input.length >= minCharLength\n\n        if (doSearch) {\n            const {\n                feedbackRecipientsId,\n                searchOnlyUsers,\n                searchOnlyFeedbackRecipients,\n            } = this.props\n\n            api.searchRecipients({\n                searchValue: input,\n                searchOnlyUsers,\n                searchOnlyFeedbackRecipients,\n                feedbackRecipientsId,\n            }).then(({ users, userGroups, organisationUnits }) => {\n                const addType = type => result => ({ ...result, type })\n                let internalSearchResult = users.map(addType('user'))\n\n                if (!this.state.searchOnlyUsers) {\n                    internalSearchResult = internalSearchResult\n                        .concat(userGroups.map(addType('userGroup')))\n                        .concat(\n                            organisationUnits.map(addType('organisationUnit'))\n                        )\n                }\n\n                this.setState({\n                    searchResult: internalSearchResult,\n                    errorText:\n                        internalSearchResult.length === 0\n                            ? i18n.t('No results found')\n                            : undefined,\n                })\n            })\n        } else {\n            this.setState({\n                lastSearch: input,\n                searchResult:\n                    (this.state.lastSearch !== '' && input === '') ||\n                    input.length < minCharLength\n                        ? []\n                        : this.state.searchResult,\n                errorText:\n                    input !== '' && input.length < minCharLength\n                        ? i18n.t(\n                              `Please enter at least ${minCharLength} characters`\n                          )\n                        : this.state.searchWarning,\n            })\n        }\n    }\n\n    onSuggestionClick = chip => {\n        if (this.props.onSuggestionClick !== undefined) {\n            this.props.onSuggestionClick(chip)\n        } else {\n            this.wipeInput()\n            this.debouncedSearch('')\n\n            const doInsert = !this.props.recipients.find(\n                recipient => recipient.id === chip.id\n            )\n\n            doInsert &&\n                this.props.updateRecipients([\n                    ...this.props.recipients,\n                    this.state.searchResult.find(\n                        result => result.id === chip.id\n                    ),\n                ])\n        }\n    }\n\n    onRemoveChip = id => {\n        this.props.updateRecipients(\n            this.props.recipients.filter(recipient => recipient.id !== id)\n        )\n    }\n\n    wipeInput = () => {\n        this.setState({\n            input: '',\n            searchResult: [],\n        })\n    }\n\n    updateInput = input => {\n        this.debouncedSearch(input)\n        this.setState({\n            input,\n        })\n    }\n\n    render() {\n        return (\n            <div\n                style={{ ...this.props.style, height: this.props.inputHeight }}\n            >\n                <ChipInput\n                    style={{ marginBottom: 16 }}\n                    disabled={\n                        this.props.disabled === undefined\n                            ? false\n                            : this.props.disabled\n                    }\n                    errorText={this.props.errorText || this.state.errorText}\n                    value={this.props.recipients}\n                    fullWidth\n                    openOnFocus\n                    searchText={this.state.input}\n                    floatingLabelText={this.props.label}\n                    dataSource={this.state.searchResult}\n                    dataSourceConfig={{ text: 'displayName', value: 'id' }}\n                    onUpdateInput={this.updateInput}\n                    onRequestAdd={chip => this.onSuggestionClick(chip)}\n                    onRequestDelete={id => this.onRemoveChip(id)}\n                />\n            </div>\n        )\n    }\n}\n\nexport default SuggestionField\n","import React from 'react'\nimport Subheader from 'material-ui/Subheader/Subheader'\n\nconst styles = {\n    subheaderTitle: {\n        height: '32px',\n        color: 'black',\n        paddingLeft: 0,\n        paddingRight: 16,\n    },\n    subheader(color, fontWeight) {\n        return {\n            height: '32px',\n            overflow: 'hidden',\n            textOverflow: 'ellipsis',\n            whiteSpace: 'nowrap',\n            padding: 0,\n            color,\n            fontWeight,\n        }\n    },\n}\n\nconst ExtendedChoiceLabel = ({\n    showTitle,\n    title,\n    label,\n    color,\n    fontWeight,\n}) => {\n    const displayLabel =\n        label && label !== 'NONE'\n            ? title === 'Assignee'\n                ? label\n                : `${label.charAt(0)}${label\n                      .toLowerCase()\n                      .substr(1, label.length)}`\n            : '-'\n\n    return (\n        <div style={{ flex: 2, paddingLeft: 10, maxWidth: 200 }}>\n            {showTitle && (\n                <Subheader style={styles.subheaderTitle}> {title} </Subheader>\n            )}\n            <Subheader style={styles.subheader(color, fontWeight)}>\n                {displayLabel}\n            </Subheader>\n        </div>\n    )\n}\n\nexport default ExtendedChoiceLabel\n","import theme from '../styles/theme'\nimport { fontFamily } from '../constants/development'\n\nexport const styles = {\n    canvas: {\n        flex: '3 0',\n        overflowY: 'scroll',\n        overflowX: 'hidden',\n        height: 'calc(100vh - 110px)',\n        paddingTop: '10px',\n    },\n    innerCanvas: {\n        display: 'flex',\n        flexDirection: 'column',\n        margin: '0px 10px 0px 10px',\n    },\n    header: {\n        display: 'flex',\n    },\n    iconButton: {\n        display: 'flex',\n        alignSelf: 'center',\n    },\n    subjectSubheader: {\n        display: 'flex',\n        alignSelf: 'center',\n        fontSize: '20px',\n        fontFamily,\n    },\n    participantsCanvas: {\n        display: 'flex',\n        flexDirection: 'column',\n    },\n    participants: {\n        paddingLeft: '12px',\n        paddingTop: '10px',\n        display: 'flex',\n        flexWrap: 'wrap',\n    },\n    chip: {\n        height: '32px',\n        marginRight: '3px',\n        marginBottom: '3px',\n    },\n    participantAddRow: {\n        display: 'flex',\n    },\n    participantsSuggestionField: {\n        paddingLeft: '12px',\n        marginBottom: '0px',\n        flex: 1,\n    },\n    participantsAdd: {\n        alignSelf: 'flex-end',\n        marginBottom: '28px',\n        paddingLeft: '12px',\n    },\n    messagesCanvas: {\n        marginBottom: '50px',\n        display: 'flex',\n        flexDirection: 'column',\n        backgroundColor: theme.palette.accent2Color,\n        margin: '0px 10px 10px 10px',\n    },\n    messagesInnerCanvas: {\n        padding: '0px',\n    },\n}\n\nexport default styles\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { compose } from 'recompose'\n\nimport history from '../../utils/history'\nimport {\n    addRecipients,\n    downloadAttachment,\n    cancelAttachment,\n    clearSelectedMessageConversation,\n} from '../../actions'\nimport { supportsAttachments } from '../../utils/helpers'\n\nimport { getInstance as getD2Instance } from 'd2/lib/d2'\nimport Subheader from 'material-ui/Subheader/Subheader'\nimport AddIcon from 'material-ui-icons/Add'\nimport NavigationBack from 'material-ui-icons/ArrowBack'\nimport FlatButton from 'material-ui/FlatButton'\nimport IconButton from 'material-ui/IconButton'\nimport Chip from 'material-ui/Chip'\nimport Paper from 'material-ui/Paper'\nimport i18n from '@dhis2/d2-i18n'\nimport Message from './Message'\nimport ReplyCard from './ReplyCard'\nimport SuggestionField from '../Common/SuggestionField'\nimport ExtendedChoiceLabel from '../Common/ExtendedChoiceLabel'\nimport { styles } from '../../styles/messageConversationStyles'\nimport theme from '../../styles/theme'\n\nconst NOTIFICATIONS = ['TICKET', 'VALIDATION_RESULT']\nconst maxParticipantsDisplay = 30\n\nclass MessageConversation extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            recipients: [],\n            currentUser: undefined,\n            cursor: 'auto',\n        }\n    }\n\n    componentDidMount() {\n        getD2Instance().then(instance => {\n            this.setState({\n                currentUser: instance.currentUser,\n            })\n        })\n    }\n\n    backToList = () => {\n        const {\n            clearSelectedMessageConversation,\n            messageConversation,\n        } = this.props\n        history.push(`/${messageConversation.messageType}`)\n        clearSelectedMessageConversation()\n    }\n\n    addRecipients = () => {\n        const users = this.state.recipients.filter(r => r.type === 'user')\n        const userGroups = this.state.recipients.filter(\n            r => r.type === 'userGroup'\n        )\n        const organisationUnits = this.state.recipients.filter(\n            r => r.type === 'organisationUnit'\n        )\n        const {\n            messageConversation,\n            selectedMessageType: messageType,\n        } = this.props\n\n        this.props.addRecipients({\n            users,\n            userGroups,\n            organisationUnits,\n            messageConversation,\n            messageType,\n        })\n\n        this.setState({\n            recipients: [],\n        })\n    }\n\n    updateRecipients = recipients => {\n        this.setState({\n            recipients,\n        })\n    }\n\n    render() {\n        const { messageConversation } = this.props\n        const messages = messageConversation.messages\n        const notification = !!(\n            NOTIFICATIONS.indexOf(messageConversation.messageType) + 1\n        )\n        const participants = messageConversation.userMessages\n            .slice(0, maxParticipantsDisplay)\n            .map(userMessage =>\n                typeof this.state.currentUser === 'undefined' ||\n                this.state.recipientsExpanded ||\n                this.state.currentUser.id !== userMessage.user.id\n                    ? userMessage.user.displayName\n                    : i18n.t('me')\n            )\n        const userMessagesLength = messageConversation.userMessages.length\n\n        if (userMessagesLength > maxParticipantsDisplay) {\n            participants.push(\n                ' + '.concat(userMessagesLength - maxParticipantsDisplay)\n            )\n        }\n\n        return (\n            <div id=\"messageconversation\" style={styles.canvas}>\n                <div style={styles.innerCanvas}>\n                    <div style={styles.header}>\n                        <IconButton\n                            style={styles.iconButton}\n                            tooltipPosition=\"bottom-right\"\n                            onClick={this.backToList}\n                            tooltip={i18n.t('Show all messages')}\n                        >\n                            <NavigationBack />\n                        </IconButton>\n                        <Subheader style={styles.subjectSubheader}>\n                            {messageConversation.subject}\n                        </Subheader>\n                        {this.props.displayExtendedChoices && (\n                            <ExtendedChoiceLabel\n                                color={theme.palette.darkGray}\n                                showTitle\n                                title={i18n.t('Status')}\n                                label={messageConversation.status}\n                            />\n                        )}\n                        {this.props.displayExtendedChoices && (\n                            <ExtendedChoiceLabel\n                                color={theme.palette.darkGray}\n                                showTitle\n                                title={i18n.t('Priority')}\n                                label={messageConversation.priority}\n                            />\n                        )}\n                        {notification && (\n                            <ExtendedChoiceLabel\n                                color={theme.palette.darkGray}\n                                showTitle\n                                title={i18n.t('Assignee')}\n                                label={\n                                    messageConversation.assignee\n                                        ? messageConversation.assignee\n                                              .displayName\n                                        : undefined\n                                }\n                            />\n                        )}\n                    </div>\n                    <div style={styles.participantsCanvas}>\n                        <Subheader\n                            style={{\n                                paddingLeft: '12px',\n                                paddingTop: '10px',\n                            }}\n                        >\n                            {i18n.t('Participants')}\n                        </Subheader>\n                        <div style={styles.participants}>\n                            {participants.map(participant => (\n                                <Chip key={participant} style={styles.chip}>\n                                    {participant}\n                                </Chip>\n                            ))}\n                        </div>\n                    </div>\n                    <div style={styles.participantAddRow}>\n                        <SuggestionField\n                            style={styles.participantsSuggestionField}\n                            label={i18n.t('Add participants to conversation')}\n                            messageConversation={messageConversation}\n                            recipients={this.state.recipients}\n                            updateRecipients={this.updateRecipients}\n                            limitSearchArray={messageConversation.userMessages}\n                        />\n                        <div style={styles.participantsAdd}>\n                            <FlatButton\n                                icon={<AddIcon />}\n                                onClick={() => this.addRecipients()}\n                                label={i18n.t('Add')}\n                            />\n                        </div>\n                    </div>\n                </div>\n                <div style={styles.messagesCanvas}>\n                    <Paper style={styles.messagesInnerCanvas}>\n                        {messages.map((message, i) => (\n                            <Message\n                                key={message.id}\n                                displayTimeDiff={this.props.displayTimeDiff}\n                                message={message}\n                                messageConversation={messageConversation}\n                                notification={notification}\n                                currentUser={this.state.currentUser}\n                                lastMessage={i + 1 === messages.length}\n                                downloadAttachment={attachment =>\n                                    this.props.downloadAttachment(\n                                        messageConversation.id,\n                                        message.id,\n                                        attachment.id\n                                    )\n                                }\n                                cancelAttachment={this.props.cancelAttachment}\n                                enableAttachments={this.props.enableAttachments}\n                            />\n                        ))}\n                    </Paper>\n                    <ReplyCard\n                        {...this.props}\n                        messageConversation={messageConversation}\n                    />\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    selectedMessageType: state.messaging.selectedMessageType,\n    displayTimeDiff: state.messaging.displayTimeDiff,\n    enableAttachments: supportsAttachments(state.messaging.dhis2CoreVersion),\n})\n\nexport default compose(\n    connect(\n        mapStateToProps,\n        {\n            addRecipients,\n            downloadAttachment,\n            cancelAttachment,\n            clearSelectedMessageConversation,\n        },\n        null,\n        { pure: false }\n    )\n)(MessageConversation)\n","import React, { Component } from 'react'\n\nimport CircularProgress from 'material-ui/CircularProgress'\nimport Badge from 'material-ui/Badge'\nimport Subheader from 'material-ui/Subheader/Subheader'\n\nimport i18n from '@dhis2/d2-i18n'\n\nimport theme from '../../styles/theme'\n\nclass MessageTypeItem extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            backgroundColor: theme.palette.accent2Color,\n            textColor: theme.palette.darkGray,\n        }\n    }\n\n    onClick = () => {\n        this.props.onClick()\n    }\n\n    onMouseEnter = () => {\n        this.setHoverText()\n        this.setState({ cursor: 'pointer' })\n    }\n    onMouseLeave = () => {\n        this.setNeutralText()\n        this.setState({ cursor: 'auto' })\n    }\n\n    setNeutralText = () => this.setTextColor(theme.palette.accent2Color)\n    setHoverText = () => this.setTextColor(theme.palette.accent3Color)\n\n    setTextColor = color => {\n        this.setState({\n            backgroundColor: color,\n        })\n    }\n\n    getBackgroundColor = (selectedValue, id) =>\n        selectedValue && id === selectedValue.id\n            ? theme.palette.accent3Color\n            : this.state.backgroundColor\n\n    render() {\n        return (\n            <div\n                role=\"presentation\"\n                style={{\n                    ...this.state,\n                    backgroundColor: this.getBackgroundColor(\n                        this.props.selectedMessageType,\n                        this.props.messageType.id\n                    ),\n                    cursor: this.state.cursor,\n                    alignItems: 'center',\n                    height: '49px',\n                    display: 'flex',\n                    flexDirection: 'row',\n                    justifyContent: 'space-between',\n                }}\n                onMouseEnter={this.onMouseEnter}\n                onMouseLeave={this.onMouseLeave}\n                onClick={() => this.onClick()}\n            >\n                <Subheader\n                    style={{\n                        marginLeft: '5px',\n                        fontSize:\n                            this.props.selectedMessageType &&\n                            this.props.messageType.id ===\n                                this.props.selectedMessageType.id\n                                ? '18px'\n                                : '16px',\n                        overflow: 'hidden',\n                        textOverflow: 'ellipsis',\n                        whiteSpace: 'nowrap',\n                        color:\n                            this.props.selectedMessageType &&\n                            this.props.messageType.id ===\n                                this.props.selectedMessageType.id\n                                ? theme.palette.primary1Color\n                                : this.state.textColor,\n                    }}\n                >\n                    {i18n.t(this.props.messageType.displayName)}\n                </Subheader>\n                {this.props.loading ? (\n                    <CircularProgress\n                        style={{ marginRight: '10px' }}\n                        color={theme.palette.primary1Color}\n                        size={24}\n                    />\n                ) : (\n                    this.props.messageType.unread > 0 && (\n                        <Badge\n                            style={{ marginTop: '12px', marginRight: '5px' }}\n                            badgeContent={\n                                this.props.messageType.unread > 100\n                                    ? '99+'\n                                    : this.props.messageType.unread\n                            }\n                            secondary\n                            badgeStyle={{ backgroundColor: '#439E8E' }}\n                        />\n                    )\n                )}\n            </div>\n        )\n    }\n}\n\nexport default MessageTypeItem\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { compose } from 'recompose'\nimport { List } from 'material-ui/List'\nimport Divider from 'material-ui/Divider'\nimport Toggle from 'material-ui/Toggle'\nimport i18n from '@dhis2/d2-i18n'\nimport history from '../../utils/history'\nimport { setSelectedMessageType, clearCheckedIds } from '../../actions'\nimport MessageTypeItem from './MessageTypeItem'\nimport theme from '../../styles/theme'\nimport moment from 'moment'\n\nconst styles = {\n    canvas: {\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'space-between',\n        height: 'calc(100vh - 95px)',\n        borderLeftStyle: 'solid',\n        borderLeftWidth: '0.5px',\n        borderLeftColor: theme.palette.accent4Color,\n        borderRightStyle: 'solid',\n        borderRightWidth: '1px',\n        borderRightColor: theme.palette.accent4Color,\n        overflowY: 'auto',\n        overflowX: 'hidden',\n        minWidth: '200px',\n    },\n}\n\nclass SidebarList extends Component {\n    constructor(props) {\n        super(props)\n        this.props.setSelectedMessageType(this.props.match.params.messageType)\n    }\n\n    render() {\n        const messageTypes = this.props.messageTypes\n\n        return (\n            <div style={styles.canvas}>\n                <List\n                    style={{\n                        padding: '0px',\n                    }}\n                >\n                    {messageTypes &&\n                        messageTypes.map(messageType => (\n                            <div key={messageType.id}>\n                                <MessageTypeItem\n                                    messageType={messageType}\n                                    onClick={() => {\n                                        this.props.setSelectedMessageType(\n                                            messageType.id\n                                        )\n                                        this.props.updateInputFields('', '', [])\n                                        this.props.attachments.length > 0 &&\n                                            this.props.clearAttachments()\n                                        history.push(`/${messageType.id}`)\n                                    }}\n                                    selectedMessageType={\n                                        this.props.selectedMessageType\n                                    }\n                                    loading={messageType.loading}\n                                />\n                                <Divider />\n                            </div>\n                        ))}\n                </List>\n                <Toggle\n                    style={{ width: '', margin: '20px' }}\n                    label={`${i18n.t('Auto refresh')} (${moment(\n                        this.props.refreshTimer\n                    ).format('mm:ss')})`}\n                    toggled={this.props.autoRefresh}\n                    onToggle={() =>\n                        this.props.setAutoRefresh(!this.props.autoRefresh)\n                    }\n                />\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    selectedMessageType: state.messaging.selectedMessageType,\n    messageTypes: state.messaging.messageTypes,\n})\n\nexport default compose(\n    connect(\n        mapStateToProps,\n        {\n            setSelectedMessageType,\n            clearCheckedIds,\n        },\n        null,\n        { pure: false }\n    )\n)(SidebarList)\n","import theme from '../styles/theme'\n\nexport const messagePanelContainer = {\n    overflowY: 'scroll',\n    overflowX: 'hidden',\n    borderRightWidth: '1px',\n    borderRightColor: theme.palette.accent4Color,\n    height: 'calc(100vh - 95px)',\n}\n\nexport const subheader = {\n    paddingLeft: '0px',\n    fontSize: '20px',\n}\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { compose } from 'recompose'\nimport Subheader from 'material-ui/Subheader/Subheader'\nimport Checkbox from 'material-ui/Checkbox'\nimport Paper from 'material-ui/Paper'\nimport i18n from '@dhis2/d2-i18n'\nimport { setAllChecked, clearCheckedIds } from '../../actions'\nimport theme from '../../styles/theme'\nimport { fontFamily } from '../../constants/development'\n\nconst fontSize = '16px'\n\nconst styles = {\n    canvas(backgroundColor) {\n        return {\n            backgroundColor,\n            display: 'flex',\n            transition: 'all 0.2s ease-in-out',\n            boxSizing: 'border-box',\n            position: 'relative',\n            whiteSpace: 'nowrap',\n            alignSelf: 'center',\n            boxShadow: 'none',\n            borderBottom: '1px solid #dfdfdf',\n        }\n    },\n    checkBox: {\n        flex: '0 0 32px',\n        display: 'flex',\n        alignSelf: 'center',\n        paddingLeft: '12px',\n    },\n    sender: {\n        fontFamily,\n        fontSize,\n        flex: 3,\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        whiteSpace: 'nowrap',\n        color: 'black',\n        paddingLeft: 10,\n        alignSelf: 'center',\n    },\n    subject: {\n        flex: 8,\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        whiteSpace: 'nowrap',\n        fontFamily,\n        fontSize,\n        color: 'black',\n        paddingLeft: 10,\n    },\n    extendedLabel: {\n        flex: 2,\n        color: 'black',\n        fontSize,\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        whiteSpace: 'nowrap',\n        padding: '0 0 0 10px',\n    },\n}\n\nclass MessageConversationListItem extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            cursor: 'auto',\n            allChecked: false,\n        }\n    }\n\n    componentDidUpdate() {\n        if (\n            this.state.allChecked &&\n            this.props.checkedIds.length < this.props.children.length\n        ) {\n            this.setState({ allChecked: false })\n        }\n    }\n\n    render() {\n        const displayExtendedChoices = this.props.displayExtendedChoices\n\n        return (\n            <Paper style={styles.canvas(theme.palette.canvasColor)}>\n                <Checkbox\n                    checked={this.state.allChecked}\n                    style={styles.checkBox}\n                    onCheck={(event, isInputChecked) => {\n                        this.state.allChecked\n                            ? this.props.clearCheckedIds()\n                            : this.props.setAllChecked(\n                                  this.props.children.map(child => ({\n                                      id: child.id,\n                                  }))\n                              )\n\n                        this.setState({ allChecked: !this.state.allChecked })\n                    }}\n                />\n                <div style={styles.sender}>{i18n.t('Sender')}</div>\n                <Subheader style={styles.subject}>\n                    {i18n.t('Subject')}\n                </Subheader>\n                {displayExtendedChoices && (\n                    <Subheader style={styles.extendedLabel}>\n                        {i18n.t('Status')}\n                    </Subheader>\n                )}\n                {displayExtendedChoices && (\n                    <Subheader style={styles.extendedLabel}>\n                        {i18n.t('Priority')}\n                    </Subheader>\n                )}\n                {this.props.notification && (\n                    <Subheader style={styles.extendedLabel}>\n                        {i18n.t('Assignee')}\n                    </Subheader>\n                )}\n                <Subheader style={styles.extendedLabel}>\n                    {i18n.t('Date')}\n                </Subheader>\n            </Paper>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    checkedIds: state.messaging.checkedIds,\n    isInFeedbackRecipientGroup: state.messaging.isInFeedbackRecipientGroup,\n})\n\nexport default compose(\n    connect(\n        mapStateToProps,\n        {\n            setAllChecked,\n            clearCheckedIds,\n        }\n    )\n)(MessageConversationListItem)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { compose } from 'recompose'\nimport Subheader from 'material-ui/Subheader/Subheader'\nimport Checkbox from 'material-ui/Checkbox'\nimport Paper from 'material-ui/Paper'\nimport Flag from 'material-ui-icons/Flag'\nimport i18n from '@dhis2/d2-i18n'\nimport history from '../../utils/history'\nimport {\n    setChecked,\n    setSelectedMessageConversation,\n    markMessageConversations,\n    clearCheckedIds,\n    setFilter,\n    updateInputFields,\n    clearAttachments,\n} from '../../actions'\nimport ExtendedChoiceLabel from '../Common/ExtendedChoiceLabel'\nimport theme from '../../styles/theme'\nimport { fontFamily } from '../../constants/development'\nimport moment from 'moment'\n\nconst styles = {\n    container(backgroundColor, wideview, cursor) {\n        return {\n            backgroundColor,\n            display: 'flex',\n            transition: 'all 0.2s ease-in-out',\n            cursor: cursor,\n            boxSizing: 'border-box',\n            position: 'relative',\n            whiteSpace: 'nowrap',\n            boxShadow: 'none',\n            borderBottom: '1px solid #dfdfdf',\n            flexWrap: wideview ? 'nowrap' : 'wrap',\n        }\n    },\n    checkBox(wideview) {\n        return {\n            flex: '0 0 32px',\n            display: 'flex',\n            alignSelf: 'center',\n            paddingLeft: wideview ? 12 : 6,\n        }\n    },\n    flag: {\n        color: theme.palette.followUp,\n        marginRight: 4,\n    },\n    sender(wideview, fontWeight) {\n        return {\n            fontFamily,\n            fontSize: '14px',\n            flex: 3,\n            overflow: 'hidden',\n            textOverflow: 'ellipsis',\n            whiteSpace: 'nowrap',\n            display: 'flex',\n            alignItems: 'center',\n            color: 'black',\n            paddingLeft: wideview ? 10 : 0,\n            fontWeight,\n        }\n    },\n    subject(wideview, fontColor, fontWeight) {\n        return {\n            flex: 8,\n            overflow: 'hidden',\n            textOverflow: 'ellipsis',\n            whiteSpace: 'nowrap',\n            paddingLeft: 10,\n            fontFamily,\n            color: fontColor,\n            fontWeight,\n            order: wideview ? 'inherit' : 10,\n            marginTop: wideview ? 0 : -10,\n            flexBasis: wideview ? '0%' : '100%',\n        }\n    },\n    dateFormat(wideview, fontColor, fontWeight) {\n        return {\n            flex: 2,\n            fontFamily,\n            paddingLeft: wideview ? 10 : 0,\n            paddingRight: wideview ? 0 : 10,\n            overflow: 'hidden',\n            textOverflow: 'ellipsis',\n            whiteSpace: 'nowrap',\n            textAlign: wideview ? '' : 'end',\n            color: fontColor,\n            fontWeight,\n        }\n    },\n}\n\nclass MessageConversationListItem extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            backgroundColor: theme.palette.canvasColor,\n            cursor: 'auto',\n        }\n    }\n\n    onClick = messageConversation => {\n        this.props.setSelectedMessageConversation(messageConversation)\n        if (messageConversation && !messageConversation.read) {\n            this.props.markMessageConversations(\n                'read',\n                [messageConversation.id],\n                this.props.selectedMessageType\n            )\n        }\n        this.props.updateInputFields('', '', [])\n        this.props.attachments.length > 0 && this.props.clearAttachments()\n        history.push(\n            `/${messageConversation.messageType}/${messageConversation.id}`\n        )\n    }\n\n    onMouseEnter = () =>\n        this.setState({\n            cursor: 'pointer',\n            backgroundColor: theme.palette.accent2Color,\n        })\n    onMouseLeave = () =>\n        this.setState({\n            cursor: 'auto',\n            backgroundColor: theme.palette.canvasColor,\n        })\n\n    getBackgroundColor = (messageConversation, checked) => {\n        const selectedMessageConversation =\n            this.props.selectedMessageConversation &&\n            messageConversation.id === this.props.selectedMessageConversation.id\n\n        if (checked && !selectedMessageConversation) {\n            return theme.palette.blue50\n        } else if (selectedMessageConversation) {\n            return theme.palette.accent3Color\n        }\n        return this.state.backgroundColor\n    }\n\n    render() {\n        const messageConversation = this.props.messageConversation\n        const title = messageConversation.lastSender\n            ? messageConversation.lastSender.displayName\n            : this.props.selectedMessageType.displayName\n        const checked = !!this.props.checkedIds.find(\n            x => x.id === messageConversation.id\n        )\n\n        const displayExtendedChoices = this.props.displayExtendedChoices\n\n        const displayTimeDiff = this.props.displayTimeDiff\n\n        const today = moment()\n        const messageDate = moment(messageConversation.lastMessage).add(\n            displayTimeDiff\n        )\n        const fontWeight = !messageConversation.read ? 'bold' : ''\n        const fontColor = this.props.messageConversation.read\n            ? 'black'\n            : theme.palette.darkGray\n\n        const containerBackgroundColor = this.getBackgroundColor(\n            messageConversation,\n            checked\n        )\n\n        return (\n            <Paper\n                style={styles.container(\n                    containerBackgroundColor,\n                    this.props.wideview,\n                    this.state.cursor\n                )}\n                onClick={event => {\n                    const onClick =\n                        event.target.innerText !== undefined &&\n                        event.target.innerText !== ''\n\n                    if (\n                        onClick &&\n                        !this.props.settingSelectedMessageConversation\n                    ) {\n                        this.onClick(messageConversation)\n                        this.props.checkedIds.length > 0 &&\n                            this.props.clearCheckedIds()\n                        if (\n                            this.props.wideview &&\n                            (this.props.messageFilter !== undefined ||\n                                this.props.priorityFilter !== undefined ||\n                                this.props.statusFilter !== undefined)\n                        ) {\n                            this.props.setFilter(undefined, 'MESSAGE')\n                        }\n                    }\n                }}\n                onMouseEnter={this.onMouseEnter}\n                onMouseLeave={this.onMouseLeave}\n            >\n                <Checkbox\n                    checked={checked}\n                    style={styles.checkBox(this.props.wideview)}\n                    onCheck={(event, isInputChecked) => {\n                        this.props.setChecked(messageConversation, !checked)\n                    }}\n                />\n                <div style={styles.sender(this.props.wideview, fontWeight)}>\n                    {messageConversation.followUp && (\n                        <Flag style={styles.flag} />\n                    )}\n                    <span>{title}</span>\n                </div>\n                <Subheader\n                    style={styles.subject(\n                        this.props.wideview,\n                        fontColor,\n                        fontWeight\n                    )}\n                >\n                    {messageConversation.subject}\n                </Subheader>\n                {displayExtendedChoices && (\n                    <ExtendedChoiceLabel\n                        showTitle={false}\n                        title={i18n.t('Status')}\n                        color={fontColor}\n                        fontWeight={fontWeight}\n                        label={messageConversation.status}\n                    />\n                )}\n                {displayExtendedChoices && (\n                    <ExtendedChoiceLabel\n                        showTitle={false}\n                        title={i18n.t('Priority')}\n                        color={fontColor}\n                        fontWeight={fontWeight}\n                        label={messageConversation.priority}\n                    />\n                )}\n                {this.props.notification && this.props.wideview && (\n                    <ExtendedChoiceLabel\n                        showTitle={false}\n                        title={i18n.t('Assignee')}\n                        color={fontColor}\n                        fontWeight={fontWeight}\n                        label={\n                            messageConversation.assignee\n                                ? messageConversation.assignee.displayName\n                                : undefined\n                        }\n                    />\n                )}\n                <Subheader\n                    style={styles.dateFormat(\n                        this.props.wideview,\n                        fontColor,\n                        fontWeight\n                    )}\n                >\n                    {today.diff(messageDate, 'hours') < 72\n                        ? messageDate.from(today)\n                        : today.year() === messageDate.year()\n                        ? messageDate.format('MMM DD')\n                        : messageDate.format('ll')}\n                </Subheader>\n            </Paper>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    selectedMessageConversation: state.messaging.selectedMessageConversation,\n    settingSelectedMessageConversation:\n        state.messaging.settingSelectedMessageConversation,\n    selectedMessageType: state.messaging.selectedMessageType,\n    checkedIds: state.messaging.checkedIds,\n    displayTimeDiff: state.messaging.displayTimeDiff,\n    messageFilter: state.messaging.messageFilter,\n    statusFilter: state.messaging.statusFilter,\n    priorityFilter: state.messaging.priorityFilter,\n    attachments: state.messaging.attachments,\n})\n\nexport default compose(\n    connect(\n        mapStateToProps,\n        {\n            setChecked,\n            setSelectedMessageConversation,\n            markMessageConversations,\n            clearCheckedIds,\n            setFilter,\n            updateInputFields,\n            clearAttachments,\n        },\n        null,\n        { pure: false }\n    )\n)(MessageConversationListItem)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { compose } from 'recompose'\nimport Subheader from 'material-ui/Subheader/Subheader'\nimport CircularProgress from 'material-ui/CircularProgress'\nimport i18n from '@dhis2/d2-i18n'\nimport { loadMessageConversations } from '../../actions'\nimport { messagePanelContainer } from '../../styles/style'\nimport theme from '../../styles/theme'\nimport ListItemHeader from './ListItemHeader'\nimport MessageConversationListItem from './MessageConversationListItem'\nimport { dedupeById, debounce } from '../../utils/helpers'\n\nconst NOTIFICATIONS = ['VALIDATION_RESULT', 'TICKET']\nconst bottomEmptyHeight = 50\n\nconst styles = {\n    canvas(wideview) {\n        return {\n            flex: '1 0',\n            maxWidth: wideview ? 'none' : '350px',\n            minWidth: wideview ? 'none' : '250px',\n            borderRightStyle: wideview ? '' : 'solid',\n            ...messagePanelContainer,\n        }\n    },\n    loading: {\n        backgroundColor: theme.palette.accent2Color,\n        height: `${bottomEmptyHeight}px`,\n        transition: 'all 0.2s ease-in-out',\n        display: 'flex',\n        justifyContent: 'center',\n    },\n}\n\nclass MessageConversationList extends Component {\n    onScroll = messageType => {\n        const messageList = document.getElementById('messagelist')\n        if (\n            !this.props.selectedMessageType.loading &&\n            this.isBottom(messageList) &&\n            messageType.loaded < messageType.total\n        ) {\n            this.props.loadMessageConversations(\n                messageType,\n                messageType.id,\n                true\n            )\n        }\n    }\n\n    debouncedOnScroll = debounce(this.onScroll, 150)\n    isBottom = el => el.scrollHeight - el.scrollTop < window.outerHeight\n\n    render() {\n        const children = dedupeById(\n            this.props.messageConversations[this.props.selectedMessageType.id]\n        )\n\n        const messageType = this.props.selectedMessageType\n            ? this.props.selectedMessageType\n            : ''\n        const selectedValue = this.props.selectedMessageConversation\n            ? this.props.selectedMessageConversation.id\n            : ''\n\n        const notification = !!(NOTIFICATIONS.indexOf(messageType.id) + 1)\n        return (\n            <div\n                id={'messagelist'}\n                onScroll={() =>\n                    this.debouncedOnScroll(this.props.selectedMessageType)\n                }\n                style={styles.canvas(this.props.wideview)}\n            >\n                {this.props.wideview && (\n                    <ListItemHeader\n                        notification={notification}\n                        displayExtendedChoices={\n                            this.props.displayExtendedChoices\n                        }\n                    >\n                        {children}\n                    </ListItemHeader>\n                )}\n                {children && children.length !== 0\n                    ? children.map(child => (\n                          <MessageConversationListItem\n                              key={child.id}\n                              messageConversation={child}\n                              wideview={this.props.wideview}\n                              selectedValue={selectedValue}\n                              notification={notification}\n                              displayExtendedChoices={\n                                  this.props.displayExtendedChoices\n                              }\n                          />\n                      ))\n                    : !this.props.selectedMessageType.loading && (\n                          <Subheader>\n                              {i18n.t(\n                                  `No ${messageType.displayName.toLowerCase()} messages`\n                              )}\n                          </Subheader>\n                      )}\n                {this.props.selectedMessageType.loading && (\n                    <div style={styles.loading}>\n                        <CircularProgress\n                            style={{ marginTop: '10px' }}\n                            color={theme.palette.primary1Color}\n                        />\n                    </div>\n                )}\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    messageTypes: state.messaging.messageTypes,\n    messageFilter: state.messaging.messageFilter,\n    statusFilter: state.messaging.statusFilter,\n    priorityFilter: state.messaging.priorityFilter,\n    messageConversations: state.messaging.messageConversations,\n    selectedMessageConversation: state.messaging.selectedMessageConversation,\n    selectedMessageType: state.messaging.selectedMessageType,\n})\n\nexport default compose(\n    connect(\n        mapStateToProps,\n        {\n            loadMessageConversations,\n        },\n        null,\n        { pure: false }\n    )\n)(MessageConversationList)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { compose } from 'recompose'\nimport { generateUid } from 'd2/lib/uid'\nimport i18n from '@dhis2/d2-i18n'\nimport { Card, CardActions, CardText } from 'material-ui/Card'\nimport RaisedButton from 'material-ui/RaisedButton'\nimport FlatButton from 'material-ui/FlatButton'\nimport TextField from 'material-ui/TextField'\nimport Subheader from 'material-ui/Subheader/Subheader'\nimport RadioButton from 'material-ui/RadioButton'\nimport {\n    sendMessage,\n    sendFeedbackMessage,\n    displaySnackMessage,\n    updateInputFields,\n    addAttachment,\n    removeAttachment,\n    cancelAttachment,\n    addRecipientByUserId,\n} from '../../actions'\nimport history from '../../utils/history'\nimport { supportsAttachments } from '../../utils/helpers'\nimport SuggestionField from '../Common/SuggestionField'\nimport AttachmentUploadButton from '../Attachments/AttachmentUploadButton'\nimport { NEGATIVE } from '../../constants/development'\nimport Attachments from '../Attachments/Attachments'\nimport { subheader } from '../../styles/style'\n\nconst styles = {\n    canvas: {\n        flex: '3 0',\n        margin: '10px',\n        overflowY: 'scroll',\n        overflowX: 'hidden',\n        height: 'calc(100vh - 110px)',\n    },\n    messageTypeField: {\n        display: 'flex',\n        flexDirection: 'row',\n    },\n    messageType: { width: '300px', marginTop: '10px' },\n}\n\nclass CreateMessage extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            isMessageFeedback: false,\n        }\n    }\n\n    componentDidMount() {\n        const { addRecipientByUserId } = this.props\n        const { messageId, recipientId } = this.props.match.params\n\n        if (messageId === 'create' && recipientId) {\n            addRecipientByUserId(recipientId)\n        }\n    }\n\n    subjectUpdate = (event, newValue) => {\n        this.props.updateInputFields(\n            newValue,\n            this.props.input,\n            this.props.recipients\n        )\n    }\n\n    inputUpdate = (event, newValue) => {\n        this.props.updateInputFields(\n            this.props.subject,\n            newValue,\n            this.props.recipients\n        )\n    }\n\n    updateRecipients = recipients => {\n        this.props.updateInputFields(\n            this.props.subject,\n            this.props.input,\n            recipients\n        )\n    }\n\n    sendMessage = () => {\n        const messageTypeId = this.state.isMessageFeedback\n            ? 'TICKET'\n            : 'PRIVATE'\n        const messageType = this.props.messageTypes.find(\n            messageType => messageType.id === messageTypeId\n        )\n\n        if (this.state.isMessageFeedback) {\n            this.props.sendFeedbackMessage(messageType)\n            history.push('/TICKET')\n        } else {\n            const users = this.props.recipients.filter(r => r.type === 'user')\n            const userGroups = this.props.recipients.filter(\n                r => r.type === 'userGroup'\n            )\n            const organisationUnits = this.props.recipients.filter(\n                r => r.type === 'organisationUnit'\n            )\n            const messageConversationId = generateUid()\n\n            this.props.sendMessage({\n                users,\n                userGroups,\n                organisationUnits,\n                messageConversationId,\n                messageType,\n            })\n            history.push('/PRIVATE')\n        }\n    }\n\n    wipeInput = () => {\n        this.props.updateInputFields('', '', [])\n        this.props.attachments.length > 0 && this.props.clearAttachments()\n    }\n\n    handleDiscard = () => {\n        const message = i18n.t('Message discarded')\n        const snackType = NEGATIVE\n        const onSnackActionClick = () => history.push('/PRIVATE/create')\n        const onSnackRequestClose = () => this.wipeInput()\n\n        this.props.displaySnackMessage({\n            message,\n            onSnackActionClick,\n            onSnackRequestClose,\n            snackType,\n        })\n\n        history.push('/PRIVATE')\n    }\n\n    render() {\n        const disabled =\n            this.props.subject === '' ||\n            this.props.input === '' ||\n            (!this.state.isMessageFeedback &&\n                this.props.recipients.length === 0)\n\n        const discardDisabled =\n            this.props.subject === '' &&\n            this.props.input === '' &&\n            (!this.state.isMessageFeedback &&\n                this.props.recipients.length === 0)\n\n        return (\n            <div style={styles.canvas}>\n                <Subheader style={subheader}> {i18n.t('Create')}</Subheader>\n                <Card>\n                    <CardText>\n                        <SuggestionField\n                            style={{ margin: '0px' }}\n                            label={i18n.t('To')}\n                            disabled={this.state.isMessageFeedback}\n                            recipients={\n                                this.state.isMessageFeedback\n                                    ? [\n                                          {\n                                              id: 'id',\n                                              displayName: i18n.t(\n                                                  'Feedback recipient group'\n                                              ),\n                                          },\n                                      ]\n                                    : this.props.recipients\n                            }\n                            updateRecipients={this.updateRecipients}\n                            inputHeight={'100px'}\n                        />\n                        <div style={styles.messageTypeField}>\n                            <div style={styles.messageType}>\n                                <RadioButton\n                                    label={i18n.t('Private message')}\n                                    checked={!this.state.isMessageFeedback}\n                                    onCheck={() => {\n                                        this.setState({\n                                            isMessageFeedback: !this.state\n                                                .isMessageFeedback,\n                                        })\n                                    }}\n                                />\n                            </div>\n                            <div style={styles.messageType}>\n                                <RadioButton\n                                    label={i18n.t('Feedback message')}\n                                    checked={this.state.isMessageFeedback}\n                                    onCheck={() => {\n                                        this.setState({\n                                            isMessageFeedback: !this.state\n                                                .isMessageFeedback,\n                                        })\n                                    }}\n                                />\n                            </div>\n                        </div>\n                        <TextField\n                            floatingLabelText={i18n.t('Subject')}\n                            fullWidth\n                            value={this.props.subject}\n                            onChange={this.subjectUpdate}\n                        />\n                        <TextField\n                            key={'createMessage'}\n                            id={'createMessage'}\n                            rows={5}\n                            underlineShow={false}\n                            value={this.props.input}\n                            multiLine\n                            fullWidth\n                            floatingLabelText={i18n.t('Message')}\n                            onChange={this.inputUpdate}\n                        />\n                        {this.props.enableAttachments && (\n                            <Attachments\n                                dataDirection={'upload'}\n                                attachments={this.props.attachments}\n                                removeAttachment={attachment =>\n                                    this.props.removeAttachment(attachment.id)\n                                }\n                                cancelAttachment={this.props.cancelAttachment}\n                            />\n                        )}\n                        <CardActions style={{ paddingLeft: '0px' }}>\n                            <RaisedButton\n                                primary\n                                disabled={disabled}\n                                label={i18n.t('Send')}\n                                onClick={() => this.sendMessage()}\n                            />\n                            <FlatButton\n                                label={i18n.t('Discard')}\n                                disabled={discardDisabled}\n                                onClick={this.handleDiscard}\n                            />\n                            {this.props.enableAttachments && (\n                                <AttachmentUploadButton\n                                    addAttachment={attachment => {\n                                        this.props.addAttachment(attachment)\n                                    }}\n                                />\n                            )}\n                        </CardActions>\n                    </CardText>\n                </Card>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    messageTypes: state.messaging.messageTypes,\n    subject: state.messaging.subject,\n    input: state.messaging.input,\n    recipients: state.messaging.recipients,\n    attachments: state.messaging.attachments,\n    enableAttachments: supportsAttachments(state.messaging.dhis2CoreVersion),\n})\n\nexport default compose(\n    connect(\n        mapStateToProps,\n        {\n            sendMessage,\n            sendFeedbackMessage,\n            displaySnackMessage,\n            updateInputFields,\n            addAttachment,\n            removeAttachment,\n            cancelAttachment,\n            addRecipientByUserId,\n        },\n        null,\n        { pure: false }\n    )\n)(CreateMessage)\n","import i18n from '@dhis2/d2-i18n'\n\nconst extendedChoices = {\n    STATUS: [\n        { key: 'NONE', value: 'NONE', primaryText: i18n.t('No status') },\n        { key: 'OPEN', value: 'OPEN', primaryText: i18n.t('Open') },\n        { key: 'PENDING', value: 'PENDING', primaryText: i18n.t('Pending') },\n        { key: 'INVALID', value: 'INVALID', primaryText: i18n.t('Invalid') },\n        { key: 'SOLVED', value: 'SOLVED', primaryText: i18n.t('Solved') },\n    ],\n    PRIORITY: [\n        { key: 'NONE', value: 'NONE', primaryText: i18n.t('No priority') },\n        { key: 'HIGH', value: 'HIGH', primaryText: i18n.t('High') },\n        { key: 'MEDIUM', value: 'MEDIUM', primaryText: i18n.t('Medium') },\n        { key: 'LOW', value: 'LOW', primaryText: i18n.t('Low') },\n    ],\n}\n\nexport default extendedChoices\n","import React from 'react'\nimport Dialog from 'material-ui/Dialog'\nimport i18n from '@dhis2/d2-i18n'\nimport SuggestionField from './SuggestionField'\n\nconst AssignToDialog = ({\n    open,\n    onRequestClose,\n    updateMessageConversations,\n    messageType,\n    feedbackRecipientsId,\n}) => (\n    <Dialog\n        open={open}\n        onRequestClose={() => {\n            onRequestClose()\n        }}\n    >\n        <SuggestionField\n            onSuggestionClick={chip => {\n                updateMessageConversations([chip.id])\n                onRequestClose()\n            }}\n            searchOnlyUsers\n            searchOnlyFeedbackRecipients={messageType.id === 'TICKET'}\n            feedbackRecipientsId={feedbackRecipientsId}\n            recipients={[]}\n            key={'suggestionField'}\n            label={i18n.t('Assignee')}\n        />\n    </Dialog>\n)\n\nexport default AssignToDialog\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { compose } from 'recompose'\nimport FlatButton from 'material-ui/FlatButton'\nimport Dialog from 'material-ui/Dialog'\nimport MoreVertIcon from 'material-ui/svg-icons/navigation/more-vert'\nimport ArrowDropRight from 'material-ui/svg-icons/navigation-arrow-drop-right'\nimport Assignment from 'material-ui-icons/Assignment'\nimport IconMenu from 'material-ui/IconMenu'\nimport MenuItem from 'material-ui/MenuItem'\nimport IconButton from 'material-ui/IconButton'\nimport Subheader from 'material-ui/Subheader'\nimport Divider from 'material-ui/Divider'\nimport Delete from 'material-ui-icons/Delete'\nimport MarkUnread from 'material-ui-icons/Markunread'\nimport Done from 'material-ui-icons/Done'\nimport i18n from '@dhis2/d2-i18n'\nimport {\n    clearCheckedIds,\n    clearSelectedMessageConversation,\n    deleteMessageConversations,\n    updateMessageConversations,\n    markMessageConversations,\n} from '../../actions'\nimport extendedChoices from '../../constants/extendedChoices'\nimport history from '../../utils/history'\nimport AssignToDialog from './AssignToDialog'\n\nconst multiSelectDisplayLimit = 99\n\nconst styles = {\n    canvas: {\n        width: '400px',\n        display: 'flex',\n    },\n    extendedChoices: {\n        display: 'flex',\n        justifyContent: 'flex-start',\n    },\n    nrSelected: {\n        padding: '0px 0px',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        whiteSpace: 'nowrap',\n    },\n}\n\nclass ToolbarExtendedChoicePicker extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            checkedItems: false,\n            dialogOpen: false,\n            assignToOpen: false,\n        }\n    }\n\n    getIds = () =>\n        this.props.selectedMessageConversation &&\n        this.props.checkedIds.length === 0\n            ? [this.props.selectedMessageConversation.id]\n            : this.props.checkedIds.map(id => id.id)\n\n    updateMessageConversation = (identifier, value) => {\n        const {\n            selectedMessageType: messageType,\n            selectedMessageConversation,\n        } = this.props\n        const messageConversationIds = this.getIds()\n\n        this.props.updateMessageConversations({\n            messageConversationIds,\n            identifier,\n            value,\n            messageType,\n            selectedMessageConversation,\n        })\n        this.props.checkedIds.length > 0 && this.props.clearCheckedIds()\n    }\n\n    markMessageConversations = mode => {\n        const ids = this.getIds()\n        this.props.markMessageConversations(\n            mode,\n            ids,\n            this.props.selectedMessageType\n        )\n        this.props.checkedIds.length > 0 && this.props.clearCheckedIds()\n    }\n\n    toggleDialog = () => {\n        this.setState({ dialogOpen: !this.state.dialogOpen })\n    }\n\n    render() {\n        const messageConversation = this.props.selectedMessageConversation\n        const multiSelect = this.props.checkedIds.length > 0\n        const display = multiSelect || messageConversation !== undefined\n\n        const actionButtons = [\n            <FlatButton\n                label={i18n.t('Cancel')}\n                primary\n                onClick={() => this.toggleDialog()}\n            />,\n            <FlatButton\n                label={i18n.t('Submit')}\n                primary\n                keyboardFocused\n                onClick={() => {\n                    this.props.deleteMessageConversations(\n                        this.getIds(),\n                        this.props.selectedMessageType\n                    )\n                    this.props.clearCheckedIds()\n                    this.toggleDialog()\n\n                    if (this.props.selectedMessageConversation) {\n                        this.props.clearSelectedMessageConversation()\n                        history.push(`/${this.props.selectedMessageType.id}`)\n                    }\n                }}\n            />,\n        ]\n\n        const displayNumberOfCheckedIds =\n            this.props.checkedIds.length > multiSelectDisplayLimit\n                ? `${multiSelectDisplayLimit}+`\n                : this.props.checkedIds.length\n\n        return display ? (\n            <div style={styles.canvas}>\n                <Dialog\n                    title={i18n.t(\n                        'Are you sure you want to delete selected message conversation(s)?'\n                    )}\n                    actions={actionButtons}\n                    modal={false}\n                    open={this.state.dialogOpen}\n                    onRequestClose={this.toggleDialog}\n                />\n                <AssignToDialog\n                    open={this.state.assignToOpen}\n                    onRequestClose={() =>\n                        this.setState({\n                            assignToOpen: !this.state.assignToOpen,\n                        })\n                    }\n                    updateMessageConversations={id =>\n                        this.updateMessageConversation('ASSIGNEE', id)\n                    }\n                    messageType={this.props.selectedMessageType}\n                    feedbackRecipientsId={this.props.feedbackRecipientsId}\n                />\n\n                <div style={styles.extendedChoices}>\n                    <IconButton\n                        tooltip={i18n.t('Delete selected')}\n                        onClick={() => {\n                            this.toggleDialog()\n                        }}\n                    >\n                        <Delete />\n                    </IconButton>\n\n                    <IconButton\n                        tooltip={i18n.t('Mark selected as unread')}\n                        onClick={() => {\n                            this.markMessageConversations('unread')\n                        }}\n                    >\n                        <MarkUnread />\n                    </IconButton>\n\n                    <IconButton\n                        tooltip={i18n.t('Mark selected as read')}\n                        onClick={() => {\n                            this.markMessageConversations('read')\n                        }}\n                    >\n                        <Done />\n                    </IconButton>\n                    {this.props.displayExtendedChoices && (\n                        <IconButton\n                            onClick={() =>\n                                this.setState({\n                                    assignToOpen: !this.state.assignToOpen,\n                                })\n                            }\n                            tooltip={i18n.t('Assign selected')}\n                        >\n                            <Assignment />\n                        </IconButton>\n                    )}\n                    {\n                        <IconMenu\n                            iconButtonElement={\n                                <IconButton>\n                                    <MoreVertIcon />\n                                </IconButton>\n                            }\n                            anchorOrigin={{\n                                horizontal: 'left',\n                                vertical: 'top',\n                            }}\n                            targetOrigin={{\n                                horizontal: 'left',\n                                vertical: 'top',\n                            }}\n                        >\n                            <MenuItem\n                                key={'markFollowUp'}\n                                value={'markFollowUp'}\n                                primaryText={i18n.t('Mark for followup')}\n                                onClick={() =>\n                                    this.updateMessageConversation(\n                                        'FOLLOW_UP',\n                                        true\n                                    )\n                                }\n                            />\n                            <MenuItem\n                                key={'clearFollowUp'}\n                                value={'clearFollowUp'}\n                                primaryText={i18n.t('Clear followup')}\n                                onClick={() =>\n                                    this.updateMessageConversation(\n                                        'FOLLOW_UP',\n                                        false\n                                    )\n                                }\n                            />\n                            {this.props.displayExtendedChoices && <Divider />}\n                            {this.props.displayExtendedChoices && (\n                                <MenuItem\n                                    key={'clearAssigned'}\n                                    value={'clearAssigned'}\n                                    primaryText={i18n.t('Clear assignee')}\n                                    onClick={() =>\n                                        this.updateMessageConversation(\n                                            'ASSIGNEE',\n                                            undefined\n                                        )\n                                    }\n                                />\n                            )}\n                            {this.props.displayExtendedChoices && (\n                                <MenuItem\n                                    primaryText={i18n.t('Set status')}\n                                    key={'setStatus'}\n                                    rightIcon={<ArrowDropRight />}\n                                    menuItems={extendedChoices.STATUS.map(\n                                        elem => (\n                                            <MenuItem\n                                                key={`${elem.key}_status`}\n                                                value={elem.value}\n                                                primaryText={elem.primaryText}\n                                                onClick={() =>\n                                                    this.updateMessageConversation(\n                                                        'STATUS',\n                                                        elem.key\n                                                    )\n                                                }\n                                            />\n                                        )\n                                    )}\n                                />\n                            )}\n                            {this.props.displayExtendedChoices && (\n                                <MenuItem\n                                    primaryText={i18n.t('Set priority')}\n                                    key={'setPriority'}\n                                    rightIcon={<ArrowDropRight />}\n                                    menuItems={extendedChoices.PRIORITY.map(\n                                        elem => (\n                                            <MenuItem\n                                                key={`${elem.key}_priority`}\n                                                value={elem.value}\n                                                primaryText={elem.primaryText}\n                                                onClick={() =>\n                                                    this.updateMessageConversation(\n                                                        'PRIORITY',\n                                                        elem.key\n                                                    )\n                                                }\n                                            />\n                                        )\n                                    )}\n                                />\n                            )}\n                        </IconMenu>\n                    }\n                </div>\n                {multiSelect && (\n                    <Subheader style={styles.nrSelected}>\n                        {`${displayNumberOfCheckedIds} ${i18n.t('selected')}`}\n                    </Subheader>\n                )}\n            </div>\n        ) : (\n            <div />\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    selectedMessageType: state.messaging.selectedMessageType,\n    selectedMessageConversation: state.messaging.selectedMessageConversation,\n    checkedIds: state.messaging.checkedIds,\n    feedbackRecipientsId: state.messaging.feedbackRecipientsId,\n})\n\nexport default compose(\n    connect(\n        mapStateToProps,\n        {\n            clearCheckedIds,\n            clearSelectedMessageConversation,\n            deleteMessageConversations,\n            updateMessageConversations,\n            markMessageConversations,\n        },\n        null,\n        { pure: false }\n    )\n)(ToolbarExtendedChoicePicker)\n","import React, { Component } from 'react'\nimport ViewFancy from 'material-ui-icons/ViewList'\nimport ViewList from 'material-ui-icons/ViewHeadline'\nimport FlatButton from 'material-ui/FlatButton'\nimport Paper from 'material-ui/Paper'\nimport CreateMessageIcon from 'material-ui-icons/Add'\nimport NavigationBack from 'material-ui-icons/ArrowBack'\nimport TextField from 'material-ui/TextField'\nimport SelectField from 'material-ui/SelectField'\nimport MenuItem from 'material-ui/MenuItem'\nimport Subheader from 'material-ui/Subheader'\nimport IconMenu from 'material-ui/IconMenu'\nimport IconButton from 'material-ui/IconButton'\nimport Checkbox from 'material-ui/Checkbox/Checkbox'\nimport MoreVertIcon from 'material-ui/svg-icons/navigation/more-vert'\nimport i18n from '@dhis2/d2-i18n'\nimport history from '../../utils/history'\nimport theme from '../../styles/theme'\nimport extendedChoices from '../../constants/extendedChoices'\nimport ToolbarExtendedChoicePicker from './ToolbarExtendedChoicePicker'\nimport { debounce } from '../../utils/helpers'\n\nconst headerHeight = '48px'\nconst searchDelay = 300\n\nconst styles = {\n    canvas(checkedOptions) {\n        return {\n            display: 'flex',\n            justifyContent: 'flex-start',\n            alignItems: 'center',\n            backgroundColor: checkedOptions\n                ? theme.palette.blue50\n                : theme.palette.accent2Color,\n            zIndex: 10,\n        }\n    },\n    checkedOption: {\n        display: 'flex',\n        justifyContent: 'flex-start',\n        minWidth: '200px',\n        margin: '6px 0',\n    },\n    filterControl: {\n        flex: 2,\n        height: headerHeight,\n        marginRight: 16,\n        maxWidth: 256,\n    },\n    rightHandCanvas: {\n        flex: '2 0',\n        display: 'flex',\n        paddingLeft: 16,\n    },\n    // IE11 has buggy support for `justifyContent: flex-end;`\n    // to achieve the same result we use a spacer div\n    ie11Spacer: {\n        flexGrow: 1,\n    },\n    iconMenu: {\n        width: '30px',\n        display: 'flex',\n    },\n}\n\nclass Toolbar extends Component {\n    state = {\n        lastMessageFilter: '',\n    }\n    debouncedSearch = debounce(this.search, searchDelay)\n\n    search(messageFilter) {\n        if (\n            this.props.selectedMessageType &&\n            this.state.lastMessageFilter !== messageFilter\n        ) {\n            this.props.loadMessageConversations(\n                this.props.selectedMessageType,\n                this.props.selectedMessageType.id\n            )\n            this.setState({ lastMessageFilter: messageFilter })\n        }\n    }\n\n    componentDidUpdate(prevProps) {\n        if (\n            prevProps.selectedMessageType &&\n            this.props.selectedMessageType.id !==\n                prevProps.selectedMessageType.id\n        ) {\n            this.debouncedSearch('')\n            this.props.messageFilter !== undefined &&\n                this.props.setFilter(undefined, 'MESSAGE')\n            this.props.statusFilter !== undefined &&\n                this.props.setFilter(undefined, 'STATUS')\n            this.props.priorityFilter !== undefined &&\n                this.props.setFilter(undefined, 'PRIORITY')\n            this.props.assignedToMeFilter &&\n                this.props.setFilter(false, 'ASSIGNED_TO_ME')\n            this.props.markedForFollowUpFilter &&\n                this.props.setFilter(false, 'MARKED_FOR_FOLLOWUP')\n            this.props.unreadFilter && this.props.setFilter(false, 'UNREAD')\n        }\n\n        if (\n            this.props.selectedMessageType !== undefined &&\n            !this.props.selectedMessageType.loading &&\n            (prevProps.statusFilter !== this.props.statusFilter ||\n                prevProps.priorityFilter !== this.props.priorityFilter ||\n                prevProps.assignedToMeFilter !==\n                    this.props.assignedToMeFilter ||\n                prevProps.markedForFollowUpFilter !==\n                    this.props.markedForFollowUpFilter ||\n                prevProps.unreadFilter !== this.props.unreadFilter ||\n                prevProps.selectedMessageType === undefined ||\n                prevProps.selectedMessageType.id !==\n                    this.props.selectedMessageType.id)\n        ) {\n            this.props.loadMessageConversations(\n                this.props.selectedMessageType,\n                this.props.selectedMessageType.id\n            )\n        }\n    }\n\n    render() {\n        const id = this.props.id\n        const displayExtendedChoices = this.props.displayExtendedChoices\n        const checkedOptions = this.props.checkedOptions\n\n        const displaySearch =\n            !this.props.wideview ||\n            (this.props.selectedMessageConversation === undefined &&\n                id !== 'create')\n\n        return (\n            <Paper style={styles.canvas(checkedOptions)}>\n                <div>\n                    {!checkedOptions && (\n                        <FlatButton\n                            style={styles.checkedOption}\n                            icon={<CreateMessageIcon />}\n                            onClick={() => history.push('/PRIVATE/create')}\n                            label={i18n.t('Compose')}\n                        />\n                    )}\n\n                    {checkedOptions && (\n                        <FlatButton\n                            style={styles.checkedOption}\n                            icon={<NavigationBack />}\n                            onClick={() => this.props.clearCheckedIds()}\n                            label={i18n.t('Deselect all')}\n                        />\n                    )}\n                </div>\n\n                <ToolbarExtendedChoicePicker\n                    displayExtendedChoices={displayExtendedChoices}\n                />\n\n                <div style={styles.rightHandCanvas}>\n                    <div style={styles.ie11Spacer} />\n                    {displayExtendedChoices &&\n                        displaySearch &&\n                        !checkedOptions && (\n                            <SelectField\n                                style={styles.filterControl}\n                                labelStyle={{\n                                    color:\n                                        this.props.statusFilter === undefined\n                                            ? 'lightGray'\n                                            : 'black',\n                                    top:\n                                        this.props.statusFilter === undefined\n                                            ? '-15px'\n                                            : '-2px',\n                                }}\n                                selectedMenuItemStyle={{\n                                    color: theme.palette.primary1Color,\n                                }}\n                                floatingLabelText={\n                                    this.props.statusFilter === undefined\n                                        ? i18n.t('Status')\n                                        : ''\n                                }\n                                floatingLabelStyle={{\n                                    top: '15px',\n                                }}\n                                iconStyle={{\n                                    top:\n                                        this.props.statusFilter === undefined\n                                            ? '-15px'\n                                            : '0px',\n                                }}\n                                value={this.props.statusFilter}\n                                onChange={(event, key, payload) => {\n                                    this.props.setFilter(\n                                        payload === null ? undefined : payload,\n                                        'STATUS'\n                                    )\n                                }}\n                            >\n                                <MenuItem\n                                    key={null}\n                                    value={null}\n                                    primaryText={''}\n                                />\n                                {extendedChoices.STATUS.map(elem => (\n                                    <MenuItem\n                                        key={elem.key}\n                                        value={elem.value}\n                                        primaryText={elem.primaryText}\n                                    />\n                                ))}\n                            </SelectField>\n                        )}\n\n                    {displayExtendedChoices &&\n                        displaySearch &&\n                        !checkedOptions && (\n                            <SelectField\n                                style={styles.filterControl}\n                                labelStyle={{\n                                    color:\n                                        this.props.priorityFilter === undefined\n                                            ? 'lightGray'\n                                            : 'black',\n                                    top:\n                                        this.props.priorityFilter === undefined\n                                            ? '-15px'\n                                            : '-2px',\n                                }}\n                                selectedMenuItemStyle={{\n                                    color: theme.palette.primary1Color,\n                                }}\n                                floatingLabelText={\n                                    this.props.priorityFilter === undefined\n                                        ? i18n.t('Priority')\n                                        : ''\n                                }\n                                floatingLabelStyle={{\n                                    top: '15px',\n                                }}\n                                iconStyle={{\n                                    top:\n                                        this.props.priorityFilter === undefined\n                                            ? '-15px'\n                                            : '0px',\n                                }}\n                                value={this.props.priorityFilter}\n                                onChange={(event, key, payload) => {\n                                    this.props.setFilter(\n                                        payload === null ? undefined : payload,\n                                        'PRIORITY'\n                                    )\n                                }}\n                            >\n                                <MenuItem\n                                    key={null}\n                                    value={null}\n                                    primaryText={''}\n                                />\n                                {extendedChoices.PRIORITY.map(elem => (\n                                    <MenuItem\n                                        key={elem.key}\n                                        value={elem.value}\n                                        primaryText={elem.primaryText}\n                                    />\n                                ))}\n                            </SelectField>\n                        )}\n\n                    {!checkedOptions && displaySearch && (\n                        <TextField\n                            style={styles.filterControl}\n                            fullWidth\n                            hintText={i18n.t('Search')}\n                            value={this.props.messageFilter || ''}\n                            onChange={(event, messageFilter) => {\n                                this.debouncedSearch(messageFilter)\n                                this.props.setFilter(messageFilter, 'MESSAGE')\n                            }}\n                            type=\"search\"\n                        />\n                    )}\n\n                    {!checkedOptions && displaySearch && (\n                        <IconMenu\n                            iconButtonElement={\n                                <IconButton>\n                                    <MoreVertIcon />\n                                </IconButton>\n                            }\n                            anchorOrigin={{\n                                horizontal: 'right',\n                                vertical: 'top',\n                            }}\n                            targetOrigin={{\n                                horizontal: 'right',\n                                vertical: 'top',\n                            }}\n                            style={styles.iconMenu}\n                            menuStyle={{ overflowX: 'hidden' }}\n                        >\n                            <Subheader style={{ padding: '0px 16px' }}>\n                                {i18n.t('Set filter')}\n                            </Subheader>\n                            {this.props.displayExtendedChoices && (\n                                <Checkbox\n                                    style={{ padding: '0px 16px' }}\n                                    key={'assignedToMeFilter'}\n                                    label={i18n.t('Assigned to me')}\n                                    checked={this.props.assignedToMeFilter}\n                                    onClick={() => {\n                                        this.props.setFilter(\n                                            !this.props.assignedToMeFilter,\n                                            'ASSIGNED_TO_ME'\n                                        )\n                                    }}\n                                />\n                            )}\n                            <Checkbox\n                                style={{ padding: '0px 16px' }}\n                                key={'markedForFollowUpFilter'}\n                                label={i18n.t('Marked for followup')}\n                                checked={this.props.markedForFollowUpFilter}\n                                onClick={() => {\n                                    this.props.setFilter(\n                                        !this.props.markedForFollowUpFilter,\n                                        'MARKED_FOR_FOLLOWUP'\n                                    )\n                                }}\n                            />\n                            <Checkbox\n                                style={{ padding: '0px 16px' }}\n                                key={'unreadFilter'}\n                                label={i18n.t('Unread messages')}\n                                checked={this.props.unreadFilter}\n                                onClick={() => {\n                                    this.props.setFilter(\n                                        !this.props.unreadFilter,\n                                        'UNREAD'\n                                    )\n                                }}\n                            />\n                        </IconMenu>\n                    )}\n                    <FlatButton\n                        style={{\n                            width: '50px',\n                            alignSelf: 'center',\n                        }}\n                        icon={\n                            !this.props.wideview ? <ViewList /> : <ViewFancy />\n                        }\n                        onClick={() => this.props.toogleWideview()}\n                    />\n                </div>\n            </Paper>\n        )\n    }\n}\n\nexport default Toolbar\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { compose } from 'recompose'\nimport Subheader from 'material-ui/Subheader/Subheader'\nimport MailIcon from 'material-ui-icons/MailOutline'\nimport i18n from '@dhis2/d2-i18n'\nimport * as api from '../../api/api'\nimport {\n    loadMessageConversations,\n    setIsInFeedbackRecipientGroup,\n    clearCheckedIds,\n    setSelectedMessageConversation,\n    setSelectedMessageType,\n    clearSelectedMessageConversation,\n    updateInputFields,\n    setFilter,\n    setDisplayTimeDiff,\n    clearAttachments,\n    setDhis2CoreVersion,\n} from '../../actions'\nimport theme from '../../styles/theme'\nimport MessageConversation from '../MessageConversation/MessageConversation'\nimport SidebarList from '../List/SidebarList'\nimport MessageConversationList from '../List/MessageConversationList'\nimport CreateMessage from '../MessageConversation/CreateMessage'\nimport Toolbar from '../Common/Toolbar'\nimport { subheader } from '../../styles/style'\nimport './MessagingCenter.css'\n\nconst EXTENDED_CHOICES = ['TICKET', 'VALIDATION_RESULT']\nconst refreshTimerTotal = 300000 // 5 minutes\nconst refreshTimerInterval = 10000 // 10 seconds\n\nclass MessagingCenter extends Component {\n    constructor(props) {\n        super(props)\n\n        this.intervalId = null\n        this.state = {\n            autoRefresh: false,\n            checkedItems: false,\n            refreshTimer: refreshTimerTotal,\n            wideview: true,\n        }\n    }\n\n    componentDidMount() {\n        const selectedMessageType = this.props.match.params.messageType\n        const selectedId = this.props.match.params.messageId\n\n        this.props.setDhis2CoreVersion(this.context.d2.system.version.minor)\n\n        if (\n            selectedId &&\n            selectedId !== selectedMessageType &&\n            selectedId !== 'create'\n        ) {\n            const initialMessageConversation = { id: selectedId }\n            this.props.setSelectedMessageConversation(\n                initialMessageConversation\n            )\n        }\n\n        api.isInFeedbackRecipientGroup().then(result =>\n            this.props.setIsInFeedbackRecipientGroup(result)\n        )\n\n        this.props.messageTypes.map(messageType =>\n            this.props.loadMessageConversations(\n                messageType,\n                selectedMessageType\n            )\n        )\n\n        this.props.setDisplayTimeDiff()\n    }\n\n    componentDidUpdate() {\n        const selectedMessageType = this.props.match.params.messageType\n        const selectedId = this.props.match.params.messageId\n\n        if (\n            !this.props.settingSelectedMessageConversation &&\n            selectedId &&\n            selectedMessageType !== selectedId &&\n            selectedId !== 'create' &&\n            (this.props.selectedMessageConversation === undefined ||\n                selectedId !== this.props.selectedMessageConversation.id)\n        ) {\n            const initialMessageConversation = { id: selectedId }\n            this.props.setSelectedMessageConversation(\n                initialMessageConversation\n            )\n        }\n\n        if (\n            selectedMessageType === selectedId &&\n            selectedMessageType !== this.props.selectedMessageType.id\n        ) {\n            this.props.setSelectedMessageType(selectedMessageType)\n        }\n\n        if (\n            (selectedMessageType === selectedId || selectedId === 'create') &&\n            this.props.selectedMessageConversation !== undefined\n        ) {\n            this.props.clearSelectedMessageConversation()\n        }\n    }\n\n    componentWillUnmount() {\n        if (this.intervalId) {\n            clearInterval(this.intervalId)\n        }\n    }\n\n    setAutoRefresh = autoRefresh => {\n        // Cancel existing interval if it shouldn't autorefresh\n        if (!autoRefresh && this.intervalId) {\n            clearInterval(this.intervalId)\n            this.intervalId = null\n        }\n\n        if (autoRefresh) {\n            this.intervalId = setInterval(this.tick, refreshTimerInterval)\n        }\n\n        this.setState({\n            autoRefresh,\n            refreshTimer: refreshTimerTotal,\n        })\n    }\n\n    tick = () => {\n        const timerHasElapsed =\n            this.state.refreshTimer - refreshTimerInterval <= 0\n\n        if (timerHasElapsed) {\n            this.refresh()\n            this.setState({\n                refreshTimer: refreshTimerTotal,\n            })\n        } else {\n            this.setState(prevState => ({\n                refreshTimer: prevState.refreshTimer - refreshTimerInterval,\n            }))\n        }\n    }\n\n    refresh = () => {\n        this.props.messageTypes.map(messageType =>\n            this.props.loadMessageConversations(\n                messageType,\n                this.props.selectedMessageType\n            )\n        )\n\n        if (this.props.selectedMessageConversation) {\n            this.props.setSelectedMessageConversation(\n                this.props.selectedMessageConversation\n            )\n        }\n    }\n\n    toogleWideview = () => {\n        this.setState({ wideview: !this.state.wideview })\n    }\n\n    render() {\n        const id = this.props.match.params.messageId\n\n        const displayExtendedChoices =\n            (this.props.selectedMessageType\n                ? !!(\n                      EXTENDED_CHOICES.indexOf(\n                          this.props.selectedMessageType.id\n                      ) + 1\n                  )\n                : false) && this.props.isInFeedbackRecipientGroup\n\n        return (\n            <div className=\"messaging-center\">\n                <Toolbar\n                    {...this.props}\n                    id={id}\n                    wideview={this.state.wideview}\n                    displayExtendedChoices={displayExtendedChoices}\n                    toogleWideview={this.toogleWideview}\n                />\n                <div className=\"messaging-center__main-content\">\n                    <SidebarList\n                        {...this.props}\n                        drawerOpen={this.state.drawerOpen}\n                        messageTypes={this.props.messageTypes}\n                        autoRefresh={this.state.autoRefresh}\n                        refreshTimer={this.state.refreshTimer}\n                        setAutoRefresh={this.setAutoRefresh}\n                    />\n\n                    {this.props.selectedMessageConversation === undefined &&\n                        !(this.state.wideview && id === 'create') && (\n                            <MessageConversationList\n                                wideview={this.state.wideview}\n                                displayExtendedChoices={\n                                    displayExtendedChoices &&\n                                    this.state.wideview\n                                }\n                            />\n                        )}\n\n                    {id === 'create' && (\n                        <CreateMessage\n                            {...this.props}\n                            wideview={this.state.wideview}\n                        />\n                    )}\n\n                    {this.props.selectedMessageConversation !== undefined &&\n                        !this.state.wideview && (\n                            <MessageConversationList\n                                wideview={this.state.wideview}\n                                displayExtendedChoices={\n                                    displayExtendedChoices &&\n                                    this.state.wideview\n                                }\n                            />\n                        )}\n\n                    {this.props.selectedMessageConversation && id !== 'create'\n                        ? this.props.selectedMessageConversation !==\n                              undefined && (\n                              <MessageConversation\n                                  {...this.props}\n                                  messageConversation={\n                                      this.props.selectedMessageConversation\n                                  }\n                                  wideview={this.state.wideview}\n                                  disableLink\n                                  displayExtendedChoices={\n                                      displayExtendedChoices\n                                  }\n                              />\n                          )\n                        : !this.state.wideview &&\n                          id !== 'create' && (\n                              <div className=\"messaging-center__no-message-selected\">\n                                  <Subheader style={subheader}>\n                                      {i18n.t('Select a message')}\n                                  </Subheader>\n                                  <MailIcon\n                                      style={{\n                                          color: theme.palette.primary1Color,\n                                          width: 120,\n                                          height: 120,\n                                      }}\n                                  />\n                              </div>\n                          )}\n                </div>\n            </div>\n        )\n    }\n}\n\nMessagingCenter.contextTypes = {\n    d2: PropTypes.object,\n}\n\nconst mapStateToProps = state => ({\n    snackMessage: state.messaging.snackMessage,\n    messageTypes: state.messaging.messageTypes,\n    messageConversations: state.messaging.messageConversations,\n    messageFilter: state.messaging.messageFilter,\n    statusFilter: state.messaging.statusFilter,\n    priorityFilter: state.messaging.priorityFilter,\n    assignedToMeFilter: state.messaging.assignedToMeFilter,\n    markedForFollowUpFilter: state.messaging.markedForFollowUpFilter,\n    unreadFilter: state.messaging.unreadFilter,\n    selectedMessageType: state.messaging.selectedMessageType,\n    selectedMessageConversation: state.messaging.selectedMessageConversation,\n    settingSelectedMessageConversation:\n        state.messaging.settingSelectedMessageConversation,\n    checkedIds: state.messaging.checkedIds,\n    checkedOptions: state.messaging.checkedIds.length > 0,\n    loaded: state.messaging.loaded,\n    isInFeedbackRecipientGroup: state.messaging.isInFeedbackRecipientGroup,\n    attachments: state.messaging.attachments,\n})\n\nexport default compose(\n    connect(\n        mapStateToProps,\n        {\n            loadMessageConversations,\n            setIsInFeedbackRecipientGroup,\n            clearCheckedIds,\n            setSelectedMessageConversation,\n            setSelectedMessageType,\n            clearSelectedMessageConversation,\n            updateInputFields,\n            setFilter,\n            setDisplayTimeDiff,\n            clearAttachments,\n            setDhis2CoreVersion,\n        },\n        null,\n        { pure: false }\n    )\n)(MessagingCenter)\n","import { Router, Route } from 'react-router-dom'\nimport { Redirect } from 'react-router'\nimport React from 'react'\nimport MessagingCenter from '../MessagingCenter/MessagingCenter'\nimport history from '../../utils/history'\n\nconst Routes = () => (\n    <Router history={history}>\n        <div>\n            <Route\n                exact\n                path=\"/\"\n                component={() => <Redirect to=\"/PRIVATE\" />}\n            />\n            <Route\n                path=\"/:messageType/:messageId?/:recipientId?\"\n                component={MessagingCenter}\n            />\n        </div>\n    </Router>\n)\n\nexport default Routes\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport MuiThemeProvider from 'material-ui/styles/MuiThemeProvider'\nimport theme from '../../styles/theme'\n\nclass AddD2Context extends React.Component {\n    getChildContext = () => ({\n        d2: this.props.d2,\n    })\n\n    render = () => (\n        <MuiThemeProvider muiTheme={theme}>\n            {this.props.children}\n        </MuiThemeProvider>\n    )\n}\n\nAddD2Context.propTypes = {\n    children: PropTypes.object.isRequired,\n    d2: PropTypes.object.isRequired,\n}\n\nAddD2Context.childContextTypes = {\n    d2: PropTypes.object,\n}\n\nexport default AddD2Context\n","import React from 'react'\nimport { Provider } from 'react-redux'\nimport i18n from '@dhis2/d2-i18n'\nimport { HeaderBar } from '@dhis2/ui-widgets'\nimport CustomSnackBar from '../Common/CustomSnackBar'\nimport store from '../../store'\nimport Routes from './Routes'\nimport AddD2Context from './AddD2Context'\n\nconst App = ({ d2 }) => (\n    <Provider store={store}>\n        <AddD2Context d2={d2}>\n            <div>\n                <HeaderBar appName={i18n.t('Messaging')} />\n                <CustomSnackBar />\n                <Routes />\n            </div>\n        </AddD2Context>\n    </Provider>\n)\n\nexport default App\n","//------------------------------------------------------------------------------\n// <auto-generated>\n// This code was generated by d2-i18n-generate.\n//\n// Changes to this file may cause incorrect behavior and will be lost if\n// the code is regenerated.\n// </auto-generated>\n//------------------------------------------------------------------------------\nimport i18n from '@dhis2/d2-i18n';\nimport moment from 'moment';\nimport 'moment/locale/ar';\nimport 'moment/locale/es';\nimport 'moment/locale/fr';\nimport 'moment/locale/lo';\nimport 'moment/locale/pt';\nimport 'moment/locale/ru';\nimport 'moment/locale/uk';\nimport 'moment/locale/ur';\nimport 'moment/locale/vi';\n\nimport arTranslations from './ar/translations.json';\nimport enTranslations from './en/translations.json';\nimport esTranslations from './es/translations.json';\nimport frTranslations from './fr/translations.json';\nimport idTranslations from './id/translations.json';\nimport loTranslations from './lo/translations.json';\nimport myTranslations from './my/translations.json';\nimport prsTranslations from './prs/translations.json';\nimport psTranslations from './ps/translations.json';\nimport ptTranslations from './pt/translations.json';\nimport ruTranslations from './ru/translations.json';\nimport ukTranslations from './uk/translations.json';\nimport urTranslations from './ur/translations.json';\nimport viTranslations from './vi/translations.json';\n\nconst namespace = 'messaging-app';\nmoment.locale('en');\n\ni18n.addResources('ar', namespace, arTranslations);\ni18n.addResources('en', namespace, enTranslations);\ni18n.addResources('es', namespace, esTranslations);\ni18n.addResources('fr', namespace, frTranslations);\ni18n.addResources('id', namespace, idTranslations);\ni18n.addResources('lo', namespace, loTranslations);\ni18n.addResources('my', namespace, myTranslations);\ni18n.addResources('prs', namespace, prsTranslations);\ni18n.addResources('ps', namespace, psTranslations);\ni18n.addResources('pt', namespace, ptTranslations);\ni18n.addResources('ru', namespace, ruTranslations);\ni18n.addResources('uk', namespace, ukTranslations);\ni18n.addResources('ur', namespace, urTranslations);\ni18n.addResources('vi', namespace, viTranslations);\n\ni18n.setDefaultNamespace(namespace);\ni18n.changeLanguage('en');\n\nexport default i18n;\n","import { config } from 'd2/lib/d2'\nimport i18n from '../locales'\n\nconst configI18n = userSettings => {\n    const uiLocale = userSettings.keyUiLocale\n\n    if (uiLocale && uiLocale !== 'en') {\n        config.i18n.sources.add(`./i18n/i18n_module_${uiLocale}.properties`)\n    }\n\n    config.i18n.sources.add('./i18n/i18n_module_en.properties')\n    i18n.changeLanguage(uiLocale)\n}\n\nexport default configI18n\n","import React from 'react'\nimport { render } from 'react-dom'\nimport * as serviceWorker from './serviceWorker'\nimport App from './components/App/App'\nimport { init, getUserSettings } from 'd2/lib/d2'\nimport { CssReset } from '@dhis2/ui-core'\nimport { Provider } from '@dhis2/app-runtime'\n\nimport configI18n from './utils/configI18n'\nimport { supportsUnversionedApiCalls } from './utils/helpers'\n\nimport './index.css'\nimport 'typeface-roboto'\n\nconst { REACT_APP_DHIS2_BASE_URL } = process.env\n\nconst initApp = async () => {\n    const dhisConfig = {\n        baseUrl: `${REACT_APP_DHIS2_BASE_URL}/api/`,\n        headers: null,\n        schemas: ['messageConversation'],\n    }\n    const d2 = await init(dhisConfig)\n    const userSettings = await getUserSettings()\n\n    const systemVersion = d2.system.version.minor\n    const providerApiVersion = supportsUnversionedApiCalls(systemVersion)\n        ? ''\n        : systemVersion\n\n    configI18n(userSettings)\n\n    render(\n        <Provider\n            config={{\n                baseUrl: REACT_APP_DHIS2_BASE_URL,\n                apiVersion: providerApiVersion,\n            }}\n        >\n            <CssReset />\n            <App d2={d2} />\n        </Provider>,\n        document.getElementById('root')\n    )\n}\n\ninitApp()\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}